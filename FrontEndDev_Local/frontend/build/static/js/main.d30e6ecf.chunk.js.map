{"version":3,"sources":["JavaScripts/User/UserDataGetSet.js","JavaScripts/User/PostFormJSUser/PostForm.js","JavaScripts/User/UserAuth.js","JavaScripts/User/PostFormJSUser/PostUserLogoutForm.js","JavaScripts/User/Nav.js","JavaScripts/User/Felvetel.js","JavaScripts/User/PostFormJSUser/PostUserChangePass.js","JavaScripts/User/Home.js","JavaScripts/User/Abszolvalt.js","Style/DeIKLogo.png","JavaScripts/Admin/AdminAuth.js","JavaScripts/Admin/AdminDataGetSet.js","JavaScripts/Admin/PostFormsJS/PostLoginAdminForm.js","JavaScripts/Admin/login_admin.js","JavaScripts/User/PostFormJSUser/PostLoginUserForm.js","JavaScripts/User/login_user.js","JavaScripts/Admin/PostFormsJS/PostAdminLogoutForm.js","JavaScripts/Admin/AdminNav.js","JavaScripts/Admin/PostFormsJS/PostUserAdministrationForm.js","JavaScripts/Admin/AdminPage.js","JavaScripts/Admin/PostFormsJS/PostAddNewProgramForm.js","JavaScripts/Admin/DoctoralPrograms.js","JavaScripts/Admin/PostFormsJS/PostAddNewSubjectForm.js","JavaScripts/Admin/Subjects.js","JavaScripts/User/TakenCourses.js","JavaScripts/Admin/PostFormsJS/PostRegUserForm.js","JavaScripts/Admin/AdminPageRegUser.js","JavaScripts/Admin/PostFormsJS/PostRegAdminForm.js","JavaScripts/Admin/AdminPageRegAdmin.js","JavaScripts/Admin/PostFormsJS/PostAddNewTeacher.js","JavaScripts/Admin/Teacher.js","JavaScripts/Admin/PostFormsJS/PostUserSubjectsAdministartionForm.js","JavaScripts/Admin/UserSubjectsAdministration.js","JavaScripts/Admin/PostFormsJS/PostAdminAdministrationForm.js","JavaScripts/Admin/Admins.js","JavaScripts/Admin/PostFormsJS/PostAdminChangePassUserForm.js","JavaScripts/Admin/AdminProfile.js","JavaScripts/ForgetPass.js","JavaScripts/Admin/Adminprotected.route.js","JavaScripts/User/Userprotected.route.js","JavaScripts/Admin/Subjectupdate.js","JavaScripts/MainPage.js","JavaScripts/App.js","JavaScripts/serviceWorker.js","index.js"],"names":["sessionStorage","getItem","firstname","setItem","lastname","UserEmail","Phone","UserUserName","DoctoralProgram","NeptunCode","Supervisor","CourseType","Semester","ProgramDirector","ID","PostForm","props","changeHandler","e","setState","target","name","value","SubmitChangeHandler","targyId","state","checked","selectedTargy","Subjectitems","find","targy","_id","langchecked","oktato","Teacher","SubjectEN","Subject","SubmitChangeHandler2","teacherId","selectedTeacher","teachernames","teacher","TeacherName","SubmitHandler","x","items","forEach","element","window","alert","preventDefault","axios","post","then","response","onPostSubmit","data","catch","error","console","log","user","Userdata","GetUserID","handleChange","bind","handleLangChange","this","content","className","onChange","required","selected","disabled","hidden","map","item","key","lang","onSubmit","type","Component","Status","PostLogoutUserForm","userredirect","SubmitHandlerLogoutUser","clear","to","Nav","href","UserData","GetUserFirstName","GetUserLastName","Felvetel","useEffect","fetchItems","fetchSubjectItems","fetchTeacherNames","useState","setItems","setSubjectItems","Teachernames","setTeacherNames","a","fetch","json","subjectdata","teachername","length","person","data-label","tstatus","ChangeUserPass","OldPass","NewPass","ConfirmNewPass","UserId","Home","handleClick","event","changepass","edit","GetUserEmail","GetUserPhoneNumber","GetUserNeptunCode","GetUserUserName","GetUserCourseType","GetUserSemester","GetUserSupervisor","GetUserProgramDirector","GetUserDoctoralProgram","Abszolvalt","email","username","PostLoginAdminForm","redirect","AdminData","SetAdminFirstname","SetAdminLastname","SetAdminEmail","SetAdminID","SetAdminUserName","auth","loggedIn","token","location","reload","pass","AdminLogin","src","DeIkLogo","alt","PostLoginUserForm","SetUserLastName","SetUserFistName","SetUserProgramDirector","programdirector","SetUserPhoneNumber","phonenumber","SetUserEmail","SetUserUserName","SetUserDoctoralProgram","doctoralprogram","SetUserSupervisor","supervisor","SetUserNeptunCode","neptuncode","SetUserCourseType","coursetype","SetUserSemester","semester","SetUserID","loggedInUser","userToken","LoginUser","PostLogoutAdminForm","adminredirect","SubmitHandlerLogout","GetAdminFirstname","GetAdminLastname","PostUserAdministration","SubmitChangeHandlerForProgramDirector","DoctoralPrograms","ProgramName","ProgramDirectorName","SubmitChangeHandlerForSupervisor","refreshPage","SubmitHandlerForEdit","datas","dataset","mssg","split","UserID","SubmitHandlerForDelete","SubmitHandlerForGenerateUserPass","SubmitHandlerForAddNewSemester","handleClickforGenNewPass","generateID","generateEmail","generateName","generate","handleClickforDelete","deleteUserID","deleteemail","deletefirstname","deletelastname","deletephonenumber","deleteneptuncode","deletesupervisor","deletedoctoralprogram","deleteprogramdirector","deletecoursetype","deletesemester","delete","handleClickForAddNewSemester","addnewsemester","placeholder","data-mssg","Users","fetchDoctoralProgram","setDoctoralPrograms","PostAddNewSubjectForm","SubmitChangeHandlerForTeachers","DeleteProgramDirector","DeleteProgramName","DeleteDirectorID","DirectorID","SubjectID","DeleteSubjectEN","DeleteTeacher","DeleteSubject","DeleteSubjectID","Subjects","TakenCourses","PostRegUserForm","Porgramitems","supervisorID","AdminPageRegUser","AdminPageRegAdmin","PostRegAdminForm","PostAddNewTeacher","EditTeacherEmail","EditTeacherName","EditTeacherID","DeleteTeacherEmail","DeleteTeacherName","DeleteTeacherID","TeacherEmail","responseData","resforCurrentSubjects","CurrentCourses","JSON","stringify","getusersubjects","handleClickForNotAdministrated","notadministratedUsers","onlynotadministrated","handleClickForAdministration","notadministratedUserSubjects","administrate","handleClickForAdministrateSubject","getadministrate","PostID","SubmitHandlerForAdministrate","handleClickForPendingSubjects","pendingSubjects","pending","handleClickForGetUserPendingSubject","pendingUserSubjects","getuserpendingsubject","handleClickForAccept","acceptpending","handleClickForDecline","declinepending","handleClickForResend","resendpending","SubmitHandlerForDecline","SubmitHandlerForResend","SubmitHandlerForAccept","UserpendingSubjects","parse","allPendingSubjects","table","notadministratedsubject","notadminUsers","Takenitems","Currentitems","TakenTable","CurrentTable","UserSubjects","PostAdminAdministration","Email","LastName","FirstName","AdminID","SubmitHandlerForGenerate","SubmitHandlerForReloadPage","DeleteAdminEmail","DeleteAdminLastName","DeleteAdminFirstName","DeleteAdminID","handleClickforGenNewPassForAdmin","GenerateAdminEmail","GenerateAdminLastName","GenerateAdminFirstName","GenerateAdminID","GetAdminID","AdminChange","AdminId","AdminProfile","GetAdminEmail","GetAdminUserName","PostAdminChangePassUserForm","ForgetPass","isAuthenticated","SecuredRouteAsAdmin","component","rest","render","Check","pathname","isAuthenticatedUser","SecuredRouteAsUser","Params","URLSearchParams","search","Subjectupdate","patch","get","subject","stdName","tname","valid","res","onClick","MainPage","App","exact","path","UserLogin","SubjectUpdate","Teachers","AdminPage","Admins","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d30e6ecf.chunk.js","sourcesContent":["\r\nclass UserData {\r\n    GetUserFirstName() {\r\n      return sessionStorage.getItem('UserFirstName');\r\n    }\r\n  \r\n    SetUserFistName(firstname) {\r\n      sessionStorage.setItem('UserFirstName', firstname);\r\n    }\r\n\r\n    GetUserLastName() {\r\n      return sessionStorage.getItem('UserLastName');\r\n    }\r\n  \r\n    SetUserLastName(lastname) {\r\n      sessionStorage.setItem('UserLastName', lastname);\r\n    }\r\n\r\n    GetUserEmail() {\r\n      return sessionStorage.getItem('UserEmail');\r\n    }\r\n  \r\n    SetUserEmail(UserEmail) {\r\n      sessionStorage.setItem('UserEmail', UserEmail);\r\n    }\r\n\r\n    GetUserPhoneNumber() {\r\n      return sessionStorage.getItem('PhoneNumber');\r\n    }\r\n  \r\n    SetUserPhoneNumber(Phone) {\r\n      sessionStorage.setItem('PhoneNumber', Phone);\r\n    }\r\n\r\n    GetUserUserName() {\r\n      return sessionStorage.getItem('UserUserName');\r\n    }\r\n  \r\n    SetUserUserName(UserUserName) {\r\n      sessionStorage.setItem('UserUserName', UserUserName);\r\n    }\r\n\r\n    GetUserDoctoralProgram() {\r\n      return sessionStorage.getItem('DoctoralProgram');\r\n    }\r\n  \r\n    SetUserDoctoralProgram(DoctoralProgram) {\r\n      sessionStorage.setItem('DoctoralProgram', DoctoralProgram);\r\n    }\r\n\r\n    GetUserNeptunCode() {\r\n      return sessionStorage.getItem('NeptunCode');\r\n    }\r\n  \r\n    SetUserNeptunCode(NeptunCode) {\r\n      sessionStorage.setItem('NeptunCode', NeptunCode);\r\n    }\r\n\r\n    GetUserSupervisor() {\r\n      return sessionStorage.getItem('Supervisor');\r\n    }\r\n  \r\n    SetUserSupervisor(Supervisor) {\r\n      sessionStorage.setItem('Supervisor', Supervisor);\r\n    }\r\n\r\n    GetUserCourseType() {\r\n      return sessionStorage.getItem('CourseType');\r\n    }\r\n  \r\n    SetUserCourseType(CourseType) {\r\n      sessionStorage.setItem('CourseType', CourseType);\r\n    }\r\n\r\n    GetUserSemester() {\r\n      return sessionStorage.getItem('Semester');\r\n    }\r\n  \r\n    SetUserSemester(Semester) {\r\n      sessionStorage.setItem('Semester', Semester);\r\n    }\r\n\r\n    GetUserProgramDirector() {\r\n      return sessionStorage.getItem('ProgramDirector');\r\n    }\r\n  \r\n    SetUserProgramDirector(ProgramDirector) {\r\n      sessionStorage.setItem('ProgramDirector', ProgramDirector);\r\n    }\r\n\r\n    GetUserID() {\r\n      return sessionStorage.getItem('ID');\r\n    }\r\n  \r\n    SetUserID(ID) {\r\n      sessionStorage.setItem('ID', ID);\r\n    }\r\n\r\n  }\r\n  \r\n  export default new UserData();","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/App.css';\r\nimport Userdata from '../../User/UserDataGetSet';\r\n\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: Userdata.GetUserID(),\r\n            targy: '',\r\n            oktato: '',\r\n            checked: false,\r\n            langchecked: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleLangChange = this.handleLangChange.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.SubmitChangeHandler(this.props.Subjectitems[0]._id)\r\n    }\r\n\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    SubmitChangeHandler = (targyId) => {\r\n        if (this.state.checked) {\r\n            this.setState({\r\n                checked: !this.state.checked\r\n            })\r\n        }\r\n        const selectedTargy = this.props.Subjectitems.find(targy => targy._id === targyId)\r\n        if(!this.state.langchecked)\r\n        {\r\n            this.setState({\r\n                oktato: selectedTargy.Teacher,\r\n                targy: selectedTargy.Subject,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                oktato: selectedTargy.Teacher,\r\n                targy: selectedTargy.SubjectEN,\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n    SubmitChangeHandler2 = (teacherId) => {\r\n        const selectedTeacher = this.props.teachernames.find(teacher => teacher._id === teacherId)\r\n        this.setState({\r\n            oktato: selectedTeacher.TeacherName\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleChange() {\r\n        if (this.state.checked) {\r\n            const selectedTargy = this.props.Subjectitems.find(targy => targy.Subject === this.state.targy)\r\n            if(!this.state.langchecked)\r\n        {\r\n            this.setState({\r\n                oktato: selectedTargy.Teacher,\r\n                targy: selectedTargy.Subject,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                oktato: selectedTargy.Teacher,\r\n                targy: selectedTargy.SubjectEN,\r\n            })\r\n        }\r\n        }\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        })\r\n    }\r\n\r\n    handleLangChange() {\r\n        this.setState({\r\n            langchecked: !this.state.langchecked\r\n        })\r\n    }\r\n\r\n\r\n    SubmitHandler = e => {\r\n        var x = false;\r\n        this.props.items.forEach(element => {\r\n            if (element.targy === this.state.targy && element.oktato === this.state.oktato) {\r\n                x = true\r\n            }\r\n        });\r\n        if (x === true) {\r\n            window.alert(\"This subject already exists\")\r\n        }\r\n        else {\r\n            e.preventDefault()\r\n\r\n            axios.post('http://phd.inf.unideb.hu/api/posts', this.state)\r\n\r\n                .then(response => {\r\n                    this.props.onPostSubmit(response.data)\r\n                    \r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { oktato } = this.state;\r\n        const content = this.state.checked\r\n            ? <li >\r\n                <label className=\"formlabel\">Teacher Name</label>\r\n                <select className=\"kekselect\" onChange={(e) => this.SubmitChangeHandler2(e.target.value)} value={this.state.value} required>\r\n                    <option value=\"\" selected disabled hidden> -- Please choose a teacher! -- </option>\r\n                    {this.props.teachernames.map(item => (\r\n                        <option key={item._id} name=\"oktato\" value={item._id}>{item.TeacherName}</option>\r\n                    ))}\r\n                </select>\r\n            </li>\r\n\r\n            : null;\r\n\r\n\r\n\r\n        const lang = this.state.langchecked\r\n            ?\r\n            <li className=\"formli\">\r\n                <label className=\"formlabel\">Subject title: </label>\r\n                <select className=\"kekselect\" onChange={(e) => this.SubmitChangeHandler(e.target.value)} value={this.state.value} required>\r\n                    {this.props.Subjectitems.map(item => (\r\n                        <option key={item._id} name=\"targy\" value={item._id}>{item.SubjectEN}</option>\r\n                    ))}\r\n                </select>\r\n\r\n            </li>\r\n\r\n            :\r\n            <li className=\"formli\">\r\n                <label className=\"formlabel\">Subject title: </label>\r\n                <select className=\"kekselect\" onChange={(e) => this.SubmitChangeHandler(e.target.value)} value={this.state.value} required>\r\n                    {this.props.Subjectitems.map(item => (\r\n                        <option key={item._id} name=\"targy\" value={item._id}>{item.Subject}</option>\r\n                    ))}\r\n                </select>\r\n\r\n            </li>\r\n            ;\r\n        return (\r\n\r\n            <form onSubmit={this.SubmitHandler} className=\"formclass\">\r\n                <ul className=\"flex-outer\">\r\n                    <li className=\"formli\">\r\n                        <span>English subject:  <span className=\"paddinga\"></span>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className=\"CheckBoxUser\"\r\n                            checked={this.state.langchecked}\r\n                            onChange={this.handleLangChange} /></span>\r\n                    </li>\r\n                    {lang}\r\n\r\n                    <li className=\"formli\">\r\n                        <label>Teacher name: </label>\r\n                        <label>{oktato}</label>\r\n                    </li>\r\n                   \r\n                    <li className=\"formli\">\r\n                        <span>Different teacher: <span className=\"paddinga\"></span> <input\r\n                            type=\"checkbox\"\r\n                            className=\"CheckBoxUser\"\r\n                            checked={this.state.checked}\r\n                            onChange={this.handleChange} /></span>\r\n                    </li>\r\n                    {content}\r\n                    <li className=\"formli\">\r\n                        <span><button className=\"submitbutton\" type=\"submit\">Register</button></span>\r\n                    </li>\r\n                </ul>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nexport default PostForm;","class Auth {\r\n\r\n    loggedInUser(Status) {\r\n      sessionStorage.setItem('LoginStatusUser',Status);\r\n    }\r\n  \r\n    isAuthenticatedUser() {\r\n      return sessionStorage.getItem('LoginStatusUser');\r\n    }\r\n  }\r\n  \r\n  export default new Auth();\r\n  ","import React, {Component}  from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../../Style/App.css';\r\nimport auth from \"../UserAuth\";\r\n\r\nclass PostLogoutUserForm extends Component{\r\n    state = {\r\n        userredirect: false,\r\n    }\r\n    \r\n    SubmitHandlerLogoutUser = e=>{ \r\n       this.setState({ userredirect: true})\r\n    }\r\n\r\n    render(){\r\n        const { userredirect} = this.state;\r\n        if (userredirect) {\r\n            sessionStorage.clear();\r\n            return <Redirect to='/userlogin'/>;\r\n        }\r\n        return (        \r\n        <form className=\"logoutbtn-wrap\" onSubmit={this.SubmitHandlerLogoutUser}>\r\n            <button type =\"submit\" className=\"logoutbtn\">Logout</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostLogoutUserForm;","import React from 'react';\r\nimport '../../Style/App.css';\r\nimport '../../Style/adminpage.css';\r\nimport UserData from './UserDataGetSet';\r\nimport PostLogoutUserForm from './PostFormJSUser/PostUserLogoutForm';\r\n\r\nfunction Nav() {\r\n  return (\r\n<div>\r\n    <nav className=\"nav-area\">\r\n    <ul>\r\n      \r\n        <li><a href=\"/Home\"> {UserData.GetUserFirstName()} {UserData.GetUserLastName()}</a></li>                  \r\n        <li>  \r\n          <div className=\"dropdownnav\">\r\n                   <button className=\"dropbtnnav\">Subjects</button>\r\n                       <div className=\"dropdown-contentnav\">\r\n                           <a href=\"/SubjectReg\">Register for Subjects</a>\r\n                           <a href=\"/TakenCourses\">Taken Courses</a>\r\n                       </div>\r\n            </div> \r\n        </li>        \r\n        <li><a href=\"/Graduation\">Degree Conferment Procedure</a></li>        \r\n        <li><PostLogoutUserForm/></li> \r\n    </ul>\r\n    </nav>\r\n  </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport PostForm from './PostFormJSUser/PostForm'\r\nimport Nav from './Nav';\r\nimport Userdata from './UserDataGetSet';\r\n\r\nfunction Felvetel()  {\r\n\r\n  useEffect(()=>{\r\n    fetchItems();\r\n    fetchSubjectItems();\r\n    fetchTeacherNames();\r\n  },[]);\r\n  \r\n  \r\n\r\n  const [items,setItems] = useState([]);\r\n  const [Subjectitems,setSubjectItems] = useState([]);\r\n  const [Teachernames,setTeacherNames] = useState([]);\r\n\r\n  const fetchItems = async () =>{\r\n    const data = await fetch(\r\n      'http://phd.inf.unideb.hu/api/posts/'+Userdata.GetUserID()\r\n      \r\n    );\r\n   \r\n\r\n    const items = await data.json();    \r\n    setItems(items);\r\n    \r\n\r\n  } ;\r\n\r\n  const fetchSubjectItems = async () =>{\r\n    const subjectdata = await fetch(\r\n      'http://phd.inf.unideb.hu/api/subjects'\r\n      \r\n    );\r\n    const Subjectitems = await subjectdata.json();    \r\n    setSubjectItems(Subjectitems);\r\n    \r\n  };\r\n\r\n  const fetchTeacherNames = async () =>{\r\n    const teachername = await fetch(\r\n      'http://phd.inf.unideb.hu/api/NameAndEmail'\r\n      \r\n    );\r\n    const Teachernames = await teachername.json();    \r\n    setTeacherNames(Teachernames);\r\n   \r\n    \r\n  };\r\n\r\n  const handlePostSubmit = (person) => {\r\n    setItems([...items, person])\r\n    \r\n  }\r\n  \r\n  return (\r\n    <div>    \r\n      <Nav />\r\n      <div className=\"targy\">  \r\n      <br/>\r\n      <span className=\"info-titleuser\">Subject registration</span>\r\n      <br/>\r\n          <div className=\"inputs\">\r\n            {Subjectitems.length > 0 && <PostForm onPostSubmit={handlePostSubmit} Subjectitems={Subjectitems} teachernames={Teachernames} items={items}/>}\r\n          </div>\r\n         <br/>\r\n      <div className=\"tables\">\r\n        \r\n        <table className=\"content-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Subject</th>\r\n              <th>Teacher</th>             \r\n              <th>Subject Status</th>\r\n              </tr>   \r\n            </thead>    \r\n            <tbody>\r\n                {items.map(item => (\r\n                  <tr key={item._id}>\r\n                    <td data-label=\"Subject\">{item.targy}</td>\r\n                    <td data-label=\"Teacher\">{item.oktato}</td>                    \r\n                    <td data-label=\"Subject Status\">{item.tstatus}</td>           \r\n                              \r\n                  </tr>\r\n                ))} \r\n            </tbody>\r\n      </table>    \r\n</div>\r\n</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Felvetel;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\nimport UserData from '../UserDataGetSet';\r\n\r\n\r\n\r\nclass ChangeUserPass extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            UserId: UserData.GetUserID(),\r\n            OldPass:'',\r\n            NewPass:'',\r\n            ConfirmNewPass:'',\r\n        }\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/changeuserpass',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            this.setState({\r\n                OldPass:'',\r\n                NewPass:'',\r\n                ConfirmNewPass:'',\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    render(){\r\n        const{OldPass,NewPass,ConfirmNewPass}=this.state;\r\n        \r\n        return (            \r\n        <form onSubmit={this.SubmitHandler}>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                   Old Password:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"OldPass\" value={OldPass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    New Password:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"NewPass\" value={NewPass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Confirm New Password:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"ConfirmNewPass\" value={ConfirmNewPass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n            \r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangeUserPass;","import React,{Component} from 'react';\r\nimport '../../Style/adminpage.css';\r\nimport Nav from './Nav';\r\nimport UserData from './UserDataGetSet';\r\nimport UserChangePass from './PostFormJSUser/PostUserChangePass'\r\n\r\nclass Home extends Component{\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                changepass:false,\r\n            }\r\n            this.handleChange = this.handleClick.bind(this);\r\n        }\r\n        \r\n        changeHandler = (e) =>{\r\n            this.setState({ [e.target.name]:e.target.value})\r\n        }\r\n    \r\n        handleClick = event => {\r\n            this.setState({      \r\n                changepass: !this.state.edit,\r\n            })   \r\n        }\r\n    \r\n            render(){\r\n                let content = null;\r\n                if(this.state.changepass){\r\n                    content =  \r\n                        <div>\r\n                            <br/>\r\n                            <span className=\"info-titleuser\">Change Password</span>\r\n                            <br/>\r\n                         <UserChangePass/>\r\n                    </div>\r\n                   \r\n                }else{\r\n                    content = <div> <br />\r\n                    <span className=\"info-titleuser\">Personal Data</span>\r\n                    <br /><br />\r\n                    <div className=\"targy\">\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                                <span className=\"ititleu\">First Name: {UserData.GetUserFirstName()}</span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\">Last Name: {UserData.GetUserLastName()}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <br />\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                                <span className=\"ititleu\">Email: {UserData.GetUserEmail()}</span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\">Phone Number: {UserData.GetUserPhoneNumber()}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <br />\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                                <span className=\"ititleu\">Neptun Code: {UserData.GetUserNeptunCode()}</span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\">Username: {UserData.GetUserUserName()}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <br />\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                                <span className=\"ititleu\">Course type: {UserData.GetUserCourseType()}</span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\">Semester: {UserData.GetUserSemester()}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <br />\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                                <span className=\"ititleu\">Supervisor: {UserData.GetUserSupervisor()}</span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\"> Program Leader: {UserData.GetUserProgramDirector()}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <br />\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                          <span className=\"ititleu\">Doctoral Program: {UserData.GetUserDoctoralProgram()}</span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\"></span>\r\n                        </li>\r\n                    </ul>\r\n              \r\n                    <br/>\r\n                    <ul className=\"list-input\">\r\n                        <li>\r\n                          <span className=\"ititleu\">Change password: <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.changepass} \r\n                                onChange={ this.handleClick }/></span>\r\n                        </li>\r\n                        <li>\r\n                                <span className=\"ititleu\"></span>\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                    </div> \r\n               }\r\n        \r\n         return (            \r\n                <div>  \r\n                    <Nav/>        \r\n                    {content} \r\n                    <br />   \r\n                </div> \r\n            )\r\n        }\r\n    }\r\n    \r\n    \r\nexport default Home;\r\n","import React from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './Nav';\r\n\r\nfunction Abszolvalt() {\r\n  return (\r\n  <div>\r\n      <Nav/>\r\n      <br/>\r\n      <span className=\"info-titleuser\">Under Development</span>  \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Abszolvalt;\r\n","export default __webpack_public_path__ + \"static/media/DeIKLogo.2f5451ff.png\";","class Auth {\r\n    loggedIn(Status) {\r\n      sessionStorage.setItem(\"LoginStatusAdmin\", Status);\r\n    }\r\n  \r\n    isAuthenticated() {\r\n      return sessionStorage.getItem(\"LoginStatusAdmin\");\r\n    }\r\n  }\r\n  \r\n  export default new Auth();\r\n  ","class AdminData {\r\n    SetAdminID(ID) {\r\n      sessionStorage.setItem('AdminID', ID);\r\n    }\r\n\r\n    GetAdminID() {\r\n        return sessionStorage.getItem('AdminID');\r\n    }\r\n\r\n    SetAdminFirstname(firstname) {\r\n        sessionStorage.setItem('AdminFirstname', firstname);\r\n    }\r\n\r\n    GetAdminFirstname() {\r\n        return sessionStorage.getItem('AdminFirstname');\r\n    }\r\n\r\n    SetAdminLastname(lastname) {\r\n        sessionStorage.setItem('AdminLastname', lastname);\r\n    }\r\n\r\n    GetAdminLastname() {\r\n        return sessionStorage.getItem('AdminLastname');\r\n    }\r\n\r\n    SetAdminEmail(email) {\r\n        sessionStorage.setItem('AdminEmail', email);\r\n    }\r\n\r\n    GetAdminEmail() {\r\n        return sessionStorage.getItem('AdminEmail');\r\n    }\r\n\r\n    SetAdminUserName(username) {\r\n        sessionStorage.setItem('AdminUsername', username);\r\n    }\r\n\r\n    GetAdminUserName() {\r\n        return sessionStorage.getItem('AdminUsername');\r\n    }\r\n  }\r\n  \r\n  export default new AdminData();","import React, {Component}  from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\nimport auth from \"../AdminAuth\";\r\nimport AdminData from '../AdminDataGetSet';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostLoginAdminForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            pass:''\r\n        }\r\n    }\r\n\r\n    state = {\r\n        redirect: false\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/adminlogin',this.state)\r\n        .then(response => {\r\n            AdminData.SetAdminFirstname(response.data.firstname);\r\n            AdminData.SetAdminLastname(response.data.lastname);\r\n            AdminData.SetAdminEmail(response.data.email);\r\n            AdminData.SetAdminID(response.data._id);\r\n            AdminData.SetAdminUserName(response.data.username);\r\n            auth.loggedIn(response.data.token);\r\n            this.setState({ redirect: true })\r\n        })\r\n        .catch(error => {\r\n            alert(\"Wrong Pass or Username!\")\r\n            refreshPage();\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const{username,pass}=this.state;\r\n        const { redirect } = this.state;\r\n        if (redirect) {\r\n            return <Redirect to='/UserSubjectsAdmin'/>;\r\n        }\r\n        return (        \r\n        <form onSubmit={this.SubmitHandler}>\r\n                    <div>\r\n\t\t\t\t\t    <span className=\"txt1\">\r\n\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"wrap-input\">\r\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" name=\"username\" value={username} onChange={this.changeHandler} required/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"wrap-input\">\r\n\t\t\t\t\t\t<input className=\"input\" type=\"password\" name=\"pass\" value={pass} onChange={this.changeHandler} required/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"container-login-form-btn\">\r\n\t\t\t\t\t\t<button type =\"submit\" className=\"login-form-btn\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n                    <ul className=\"list-containeru\">\r\n                        <li>\r\n                            <a className=\"link-forget\" href=\"/ForgotPass\">Forgot your password? </a>\r\n                        </li>\r\n                    </ul>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostLoginAdminForm;\r\n","import React from 'react';\r\nimport DeIkLogo from '../../Style/DeIKLogo.png' \r\nimport '../../Style/style.css';\r\nimport PostLoginAdminForm from './PostFormsJS/PostLoginAdminForm';\r\n\r\nfunction AdminLogin() {\r\n  return (\r\n<div className=\"centered\">\r\n    <style>{'body { background-color: #EBECF0; }'}</style>\r\n    <div className=\"limiter\">\r\n\t\t<div className=\"container-login\">\r\n\t\t\t<div className=\"wrap-login\">\r\n\t\t\t\t\t<span className=\"login-form-title\">\r\n\t\t\t\t\t\tDoctoral School <br /> of Informatics\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"img-wrap\">\r\n\t\t\t\t\t\t\t<img className=\"img\" src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"error-messages\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<PostLoginAdminForm/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;","import React, {Component}  from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\nimport auth from \"../UserAuth\";\r\nimport UserData from '../UserDataGetSet';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostLoginUserForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            pass:''\r\n        }\r\n    }\r\n\r\n    state = {\r\n        redirect: false\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/userlogin',this.state)\r\n        .then(response => {\r\n            UserData.SetUserLastName(response.data.lastname);\r\n            UserData.SetUserFistName(response.data.firstname);\r\n            UserData.SetUserProgramDirector(response.data.programdirector);\r\n            UserData.SetUserPhoneNumber(response.data.phonenumber);\r\n            UserData.SetUserEmail(response.data.email);\r\n            UserData.SetUserUserName(response.data.username);\r\n            UserData.SetUserDoctoralProgram(response.data.doctoralprogram);\r\n            UserData.SetUserSupervisor(response.data.supervisor);\r\n            UserData.SetUserNeptunCode(response.data.neptuncode);\r\n            UserData.SetUserCourseType(response.data.coursetype);\r\n            UserData.SetUserSemester(response.data.semester);\r\n            UserData.SetUserID(response.data._id);\r\n            auth.loggedInUser(response.data.userToken);\r\n            this.setState({ redirect: true });\r\n        })\r\n        .catch(error => {\r\n            alert(\"Wrong Pass or Username!\")\r\n            refreshPage();\r\n        })\r\n    }\r\n    render(){\r\n        const{username,pass}=this.state;\r\n        const { redirect } = this.state;\r\n        if (redirect) {\r\n            return <Redirect to='/Home'/>;\r\n        }\r\n        return (            \r\n        <form onSubmit={this.SubmitHandler}>\r\n       <div>\r\n\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"wrap-input\">\r\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" name=\"username\" value={username} onChange={this.changeHandler} required/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"wrap-input\">\r\n\t\t\t\t\t\t<input className=\"input\" type=\"password\" name=\"pass\" value={pass} onChange={this.changeHandler} required/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"container-login-form-btn\">\r\n\t\t\t\t\t\t<button type =\"submit\" className=\"login-form-btn\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n                    <ul className=\"list-containeru\">\r\n                        <li>\r\n                            <a className=\"link-forget\" href=\"/ForgotPass\">Forgot your password? </a>\r\n                        </li>\r\n                    </ul>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostLoginUserForm;\r\n","import React from 'react';\r\nimport DeIkLogo from '../../Style/DeIKLogo.png' \r\nimport '../../Style/style.css';\r\nimport PostLoginUserForm from './PostFormJSUser/PostLoginUserForm';\r\n\r\nfunction LoginUser() {\r\n  return (\r\n    <div className=\"centered\">\r\n    <style>{'body { background-color: #EBECF0; }'}</style>\r\n    <div className=\"limiter\">\r\n\t\t<div className=\"container-login\">\r\n\t\t\t<div className=\"wrap-login\">\r\n\t\t\t\t\t<span className=\"login-form-title\">\r\n\t\t\t\t\t\tDoctoral School <br />  of Informatics\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"img-wrap\">\r\n\t\t\t\t\t\t\t<img className=\"img\" src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"error-messages\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<PostLoginUserForm/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default LoginUser;","import React, {Component}  from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../../Style/adminpage.css';\r\nimport auth from \"../AdminAuth\";\r\n\r\nclass PostLogoutAdminForm extends Component{\r\n    state = {\r\n        adminredirect: false,\r\n    }\r\n    \r\n    SubmitHandlerLogout = e=>{ \r\n       this.setState({ adminredirect: true})\r\n    }\r\n\r\n    render(){\r\n        const { adminredirect} = this.state;\r\n        if (adminredirect) {\r\n            sessionStorage.clear();\r\n            return <Redirect to='/adminlogin'/>;\r\n        }\r\n        return (        \r\n        <form onSubmit={this.SubmitHandlerLogout}>\r\n                     <div className=\"container-logout-btna\">\r\n                            <button type =\"submit\" className=\"wrap-logout-btna\">\r\n\t\t\t\t\t\t\t    Logout\r\n                            </button>\r\n                    </div>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostLogoutAdminForm;","import React from 'react';\r\nimport '../../Style/adminpage.css';\r\nimport PostLogoutAdminForm from './PostFormsJS/PostAdminLogoutForm';\r\nimport AdminData from './AdminDataGetSet';\r\n\r\nfunction Nav() {\r\n  return (\r\n<div>\r\n    <ul className=\"list-containera\">\r\n    <li className=\"paddinga\">\r\n        {AdminData.GetAdminFirstname() + \" \" + AdminData.GetAdminLastname()}\r\n    </li>\r\n    <li><PostLogoutAdminForm/></li> \r\n   </ul>\r\n   <div className=\"navbar\">\r\n       <a href=\"UserSubjectsAdmin\">User Subjects</a>\r\n       <a href=\"Users\">User Administration</a>\r\n       <a href=\"Admins\">Admin Administration</a> \r\n       <a href=\"Teachers\">Teachers</a> \r\n       <a href=\"Subjects\">Subjects</a>\r\n       <a href=\"DoctoralPrograms\">Doctoral Programs</a>\r\n       <div className=\"dropdown\">\r\n           <button className=\"dropbtn\">Registration</button>\r\n               <div className=\"dropdown-content\">\r\n                   <a href=\"AdminPageRegUser\">User Registration</a>\r\n                   <a href=\"AdminPageRegAdmin\">Admin Registration</a>\r\n                   </div>\r\n       </div>\r\n       <a href=\"AdminProfile\">Profile</a>\r\n   </div>      \r\n        \r\n</div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nclass PostUserAdministration extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            firstname:'',\r\n            UserID:'',\r\n            lastname:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            neptuncode:'',\r\n            supervisor:'',\r\n            doctoralprogram:'',\r\n            coursetype:'',\r\n            semester:'',\r\n            programdirector:'',\r\n            edit:false,\r\n            delete:false,\r\n            deletefirstname:'',\r\n            deleteUserID:'',\r\n            deletelastname:'',\r\n            deleteemail:'',\r\n            deletephonenumber:'',\r\n            deleteneptuncode:'',\r\n            deletesupervisor:'',\r\n            deletedoctoralprogram:'',\r\n            deletecoursetype:'',\r\n            deletesemester:'',\r\n            deleteprogramdirector:'',\r\n            generate:'',\r\n            generateID:'',\r\n            generateName:'',\r\n            generateEmail:'',\r\n            addnewsemester:false,\r\n        }\r\n        this.handleChange = this.handleClick.bind(this);\r\n    }\r\n\r\n    refreshPage() {\r\n        window.location.reload(false)\r\n    }\r\n    \r\n\r\n    SubmitChangeHandlerForProgramDirector = (targyId) =>{\r\n        const selectedTargy = this.props.DoctoralPrograms.find(doctoralprogram => doctoralprogram._id === targyId)\r\n        this.setState({\r\n            doctoralprogram: selectedTargy.ProgramName,\r\n            programdirector: selectedTargy.ProgramDirectorName,\r\n        })}\r\n\r\n    SubmitChangeHandlerForSupervisor = (teacherId) =>{\r\n            const selectedTeacher = this.props.teachernames.find(teacher => teacher._id === teacherId)\r\n            this.setState({\r\n                supervisor: selectedTeacher.TeacherName                \r\n            })         \r\n        }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getteachers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            this.refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            this.refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForEdit= event =>{ \r\n        event.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/editusers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            this.refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            this.refreshPage() \r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n       \r\n        const datas = event.target.dataset.mssg.split('|');  \r\n        this.setState({      \r\n            edit: !this.state.edit,\r\n            UserID:datas[0],\r\n            email:datas[1],\r\n            firstname:datas[2],\r\n            lastname:datas[3],\r\n            phonenumber:datas[4],\r\n            neptuncode:datas[5],\r\n            supervisor:datas[6],\r\n            doctoralprogram:datas[7],\r\n            programdirector:datas[8],\r\n            coursetype:datas[9],\r\n            semester:datas[10],\r\n        })\r\n    }\r\n\r\n    SubmitHandlerForDelete= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/deleteusers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            this.refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            this.refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForGenerateUserPass= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/gennewpassforusers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            this.refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            this.refreshPage() \r\n        })\r\n    }\r\n    SubmitHandlerForAddNewSemester= event =>{ \r\n        event.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/editusers/addnewsemester',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            this.refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            this.refreshPage() \r\n        })\r\n    }\r\n\r\n    handleClickforGenNewPass = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            generateID:datas[0],\r\n            generateEmail:datas[1],\r\n            generateName:datas[2] + \" \" + datas[3],\r\n            generate: !this.state.generate,\r\n        })   \r\n    }\r\n\r\n    handleClickforDelete = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            deleteUserID:datas[0],\r\n            deleteemail:datas[1],\r\n            deletefirstname:datas[2],\r\n            deletelastname:datas[3],\r\n            deletephonenumber:datas[4],\r\n            deleteneptuncode:datas[5],\r\n            deletesupervisor:datas[6],\r\n            deletedoctoralprogram:datas[7],\r\n            deleteprogramdirector:datas[8],\r\n            deletecoursetype:datas[9],\r\n            deletesemester:datas[10],\r\n            delete: !this.state.delete,\r\n        })   \r\n    }\r\n\r\n    handleClickForAddNewSemester = event => {\r\n        this.setState({\r\n            addnewsemester:!this.state.addnewsemester,\r\n        })   \r\n    }\r\n    \r\n    render(){\r\n        let content = null;\r\n        if(this.state.addnewsemester){\r\n            content = <form onSubmit={this.SubmitHandlerForAddNewSemester} name={this.name}>\r\n            <br/>\r\n                 <span className=\"inf-title\">Would you like to add new semester for every users?</span>\r\n            <br/>\r\n            <span className=\"ititle\">(If you press add, then everyone get +1 semester)</span>\r\n\r\n             <ul className=\"list-input\">\r\n                 <li>\r\n                        <div className=\"container-login-form-btna\">\r\n                             <button type =\"submit\" className=\"login-form-btna\">\r\n                            Add\r\n                             </button>\r\n                        </div>\r\n                </li>\r\n            </ul>\r\n            </form>\r\n        }else{\r\n        if(this.state.generate){\r\n            content = <form onSubmit={this.SubmitHandlerForGenerateUserPass} name={this.name}>\r\n            <br/>\r\n                 <span className=\"inf-title\">Would you like to generate a new password for this user?</span>\r\n            <br/>\r\n\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Name: {this.state.generateName} </span>\r\n             </li>\r\n            </ul>\r\n\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                <span className=\"ititle\">Email: {this.state.generateEmail}</span>\r\n             </li>\r\n             </ul>\r\n             <br/>\r\n\r\n             <ul className=\"list-input\">\r\n                 <li>\r\n                        <div className=\"container-login-form-btna\">\r\n                             <button type =\"submit\" className=\"login-form-btna\">\r\n                            Generate\r\n                             </button>\r\n                        </div>\r\n                </li>\r\n            </ul>\r\n            </form>\r\n        }else{\r\n        if(this.state.delete){\r\n            content =  \r\n            <form onSubmit={this.SubmitHandlerForDelete} name={this.name}>\r\n                 <br />\r\n                 <span className=\"inf-title\">Do you want to delete this User?</span>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Name: {this.state.deletefirstname} {this.state.deletelastname}</span>\r\n             </li>\r\n            </ul>\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Neptun Code: {this.state.deleteneptuncode}</span>\r\n             </li>\r\n             </ul>\r\n             <br/>\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Email: {this.state.deleteemail}</span>\r\n             </li>\r\n            </ul>\r\n            <ul className=\"list-input\"> \r\n                <li>\r\n                 <span className=\"ititle\">Phone Number: {this.state.deletephonenumber}</span>\r\n                </li>\r\n            </ul>\r\n             <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Semester: {this.state.deletesemester}</span>\r\n             </li>\r\n            </ul>\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Supervisor: {this.state.deletesupervisor}</span>\r\n             </li>\r\n             </ul>\r\n             <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Course type: {this.state.deletecoursetype}</span>\r\n             </li>\r\n            </ul>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Doctoral Program: {this.state.deletedoctoralprogram}</span>\r\n             </li>\r\n            </ul>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n                 <span className=\"ititle\">Program Leader: {this.state.deleteprogramdirector}</span>\r\n             </li>\r\n            </ul>\r\n         <br />\r\n         <ul className=\"list-input\">\r\n            <li>\r\n                <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Delete\r\n                 </button>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n            </form>\r\n        }\r\n        else{\r\n            if (this.state.edit) {\r\n             content =  \r\n         <form onSubmit={this.SubmitHandlerForEdit}>\r\n             <br/>\r\n             <span className=\"inf-title\">\r\n                Edit Users\r\n\t\t</span>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                   Email\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Phone Number\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"tel\" name=\"phonenumber\" value={this.state.phonenumber} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    First name\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"firstname\" value={this.state.firstname} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Last name\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"lastname\" value={this.state.lastname} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            </ul>\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Supervisor\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            \r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForSupervisor(e.target.value)} value={this.state.value} required>\r\n        <option value={this.state.supervisor} selected disabled hidden>{this.state.supervisor}</option>\r\n                        {this.props.teachernames.map(item => (                                \r\n                                <option key={item._id} name =\"supervisor\" value={item._id}>{item.TeacherName}</option>\r\n                        )) } \r\n            </select>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Neptun code\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"neptuncode\" value={this.state.neptuncode} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            </ul>\r\n            \r\n         <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Doctoral Program\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForProgramDirector(e.target.value)} value={this.state.value} required>\r\n                            <option value={this.state.doctoralprogram} selected disabled hidden>{this.state.doctoralprogram}</option>\r\n                            {this.props.DoctoralPrograms.map(item => (                                \r\n                                <option key={item._id} name =\"ProgramName\" value={item._id}>{item.ProgramName}</option>\r\n                        )) } \r\n            </select>\r\n\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">    \r\n                    Program Leader\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input  className=\"inputa\"  disabled=\"disabled\"  placeholder=\"Automatic Field\" type=\"text\" name=\"programdirector\" value={this.state.programdirector} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">    \r\n                    Course Type\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <select name=\"coursetype\" className=\"inputa\" onChange={this.changeHandler} required>\r\n                        <option value={this.state.coursetype} selected disabled hidden>{this.state.coursetype}</option>\r\n                    <option value=\"Nappali\">Nappali</option>\r\n                    <option value=\"Levelező\">Levelező</option>\r\n                </select>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Semester\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            <select name=\"semester\" className=\"inputa\" onChange={this.changeHandler} required>\r\n                    <option value={this.state.semester} selected disabled hidden> {this.state.semester} </option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n            </select>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n            <br/>\r\n        \r\n                <div className=\"container-login-form-btna\">\r\n                    <button type =\"submit\" className=\"login-form-btna\">\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </form>;\r\n        }\r\n        else{\r\n         content= <form onSubmit={this.SubmitHandler}>\r\n                  <br />\r\n            <span className=\"inf-title\">\r\n                 User Administration \r\n\t\t\t</span>\r\n            <br />\r\n    <div className=\"targy\">  \r\n    <ul className=\"list-containers\">\r\n             <li className=\"paddingb\">\r\n                Add new semester for users:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={this.handleClickForAddNewSemester}/>\r\n             </li> \r\n        </ul>\r\n      <div className=\"atables\">\r\n            <table className=\"acontent-table\">\r\n                <thead>\r\n                 <tr>\r\n                 <th>Email</th>\r\n                 <th>First Name</th>             \r\n                 <th>Last Name</th>\r\n                 <th>Phone number</th>  \r\n                 <th>Neptun code</th>  \r\n                 <th>Supervisor</th>\r\n                 <th>Doctoral Program</th>  \r\n                 <th>Program Leader</th> \r\n                 <th>Course Type</th>  \r\n                 <th>Sem.</th>\r\n                 <th>Edit</th>\r\n                 <th>Del.</th>\r\n                 <th>Gen.</th>\r\n                 </tr>   \r\n                </thead>\r\n        \r\n                \r\n                <tbody>\r\n                {this.props.items.map(item => (\r\n                  <tr key={item._id}>\r\n                    <td data-label=\"Email:\">{item.email}</td>\r\n                    <td data-label=\"First name:\">{item.firstname}</td>\r\n                    <td data-label=\"Last name:\">{item.lastname}</td>  \r\n                    <td data-label=\"Phone:\">{item.phonenumber}</td>  \r\n                    <td data-label=\"Neptun code:\">{item.neptuncode}</td>  \r\n                    <td data-label=\"Supervisor:\">{item.supervisor}</td>  \r\n                    <td data-label=\"DoctoralProgram:\">{item.doctoralprogram}</td> \r\n                    <td data-label=\"ProgramLeader:\">{item.programdirector}</td>   \r\n                    <td data-label=\"Course type:\">{item.coursetype}</td>  \r\n                    <td data-label=\"Semester:\">{item.semester}</td> \r\n                    <td data-label=\"Edit:\">\r\n                        <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.edit} \r\n                                data-mssg={item._id+'|'+item.email+'|'+item.firstname+'|'+item.lastname+'|'+item.phonenumber+\r\n                                '|'+ item.neptuncode+'|'+item.supervisor+'|'+item.doctoralprogram+'|'+item.programdirector+\r\n                                '|'+item.coursetype+'|'+item.semester}\r\n                                onChange={ this.handleClick }/>\r\n                    </td>\r\n                    <td data-label=\"Del.:\">\r\n                        <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.delete} \r\n                                data-mssg={item._id+'|'+item.email+'|'+item.firstname+'|'+item.lastname+'|'+item.phonenumber+\r\n                                '|'+ item.neptuncode+'|'+item.supervisor+'|'+item.doctoralprogram+'|'+item.programdirector+\r\n                                '|'+item.coursetype+'|'+item.semester}\r\n                                onChange={ this.handleClickforDelete } />\r\n                    </td>\r\n                    <td data-label=\"Gen.::\">\r\n                        <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.generate} \r\n                                data-mssg={item._id+'|'+item.email+'|'+item.firstname+'|'+item.lastname}\r\n                                onChange={ this.handleClickforGenNewPass } />\r\n                    </td>         \r\n                  </tr>\r\n                ))} \r\n                </tbody>\r\n            </table>    \r\n        </div>\r\n    </div> \r\n        </form>;\r\n        }}}}\r\n        return ( \r\n        <div>          \r\n            {content} \r\n            <br /> \r\n        </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostUserAdministration;","import DeIkLogo from '../../Style/DeIKLogo.png';\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './AdminNav';\r\nimport '../../Style/adminpage.css';\r\nimport UsersAdministrationForm from './PostFormsJS/PostUserAdministrationForm'\r\n\r\n\r\nfunction  Users() {\r\n    useEffect(()=>{\r\n        fetchDoctoralProgram();\r\n        fetchTeacherNames();\r\n        fetchItems();\r\n      },[]);\r\n      \r\n      const [items,setItems] = useState([]);\r\n      const [DoctoralPrograms,setDoctoralPrograms] = useState([]);\r\n      const [Teachernames,setTeacherNames] = useState([]);\r\n    \r\n    const fetchItems = async () =>{\r\n    const data = await fetch(\r\n      'http://phd.inf.unideb.hu/api/getusers'\r\n          \r\n        );\r\n        const items = await data.json();    \r\n        setItems(items);\r\n    };\r\n\r\n    const fetchDoctoralProgram = async () =>{\r\n      const data = await fetch(\r\n        'http://phd.inf.unideb.hu/api/getdoctoralprograms'\r\n      );\r\n      const items = await data.json();    \r\n      setDoctoralPrograms(items);\r\n    };\r\n  \r\n    const fetchTeacherNames = async () =>{\r\n      const teachername = await fetch(\r\n          'http://phd.inf.unideb.hu/api/NameAndEmail' \r\n        );\r\n        const Teachernames = await teachername.json();    \r\n        setTeacherNames(Teachernames);  \r\n    };\r\n    \r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n    <div className=\"containera\">\r\n        <div className=\"wrap-logina\">\r\n            <div className=\"img-wrapa\">\r\n                <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t</div>\r\n            <div className=\"titlea\"> \r\n                <span className=\"login-form-title\">\r\n                  Doctoral School <br /> of Informatics\r\n\t\t\t          </span>\r\n            </div>\r\n                <Nav/> \r\n                <UsersAdministrationForm items={items} teachernames={Teachernames} DoctoralPrograms={DoctoralPrograms}/>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostAddNewSubjectForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            DirectorID:'',\r\n            ProgramName:'',\r\n            ProgramDirectorName:'',\r\n            DeleteDirectorID:'',\r\n            DeleteProgramName:'',\r\n            DeleteProgramDirector:'',\r\n            delete:false,\r\n            edit:false\r\n        }\r\n        this.handleChange = this.handleClick.bind(this);\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getdoctoralprograms',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n    SubmitHandlerForDelete= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/deleteprograms',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitChangeHandlerForTeachers = (teacherId) =>{\r\n        const selectedTeacher = this.props.teachernames.find(teacher => teacher._id === teacherId)\r\n        this.setState({\r\n            ProgramDirectorName: selectedTeacher.TeacherName                \r\n        })         \r\n    }\r\n\r\n    handleClickforDelete = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            DeleteProgramDirector: datas[2],\r\n            DeleteProgramName: datas[1],\r\n            DeleteDirectorID: datas[0],\r\n            delete: !this.state.delete,\r\n        })   \r\n    }\r\n\r\n    SubmitHandlerForEdit= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/editdoctoralprograms',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n        const datas = event.target.dataset.mssg.split('|');   \r\n        this.setState({      \r\n            edit: !this.state.edit,\r\n            ProgramDirectorName: datas[2],\r\n            ProgramName: datas[1],\r\n            DirectorID: datas[0]\r\n        }) \r\n    }\r\n    render(){\r\n        const{ProgramName}=this.state;\r\n        let content = null;\r\n        if(this.state.delete){\r\n            content =  \r\n            <form onSubmit={this.SubmitHandlerForDelete}>\r\n                 <span className=\"inf-title\">Do you want to delete this Program?</span>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n\r\n             <span className=\"ititle\">Program Name: {this.state.DeleteProgramName}</span>\r\n             </li>\r\n         </ul>\r\n         <br />\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <span className=\"ititle\">Program Leader: {this.state.DeleteProgramDirector}</span>\r\n             </li>\r\n         </ul>\r\n \r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Delete\r\n                 </button>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n            </form>\r\n        } else {\r\n        if (this.state.edit) {\r\n            content =  \r\n        <form onSubmit={this.SubmitHandlerForEdit}>\r\n            <span className=\"inf-title\">\r\n               Edit Doctoral Programs\r\n            </span>\r\n       <br />\r\n           <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Program:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"ProgramName\" value={this.state.ProgramName} onChange={e => {\r\n                    this.setState({ ProgramName: e.target.value})}} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Program Leader:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForTeachers(e.target.value)} value={this.state.value} required>\r\n                <option value={this.state.ProgramDirectorName} selected disabled hidden>{this.state.ProgramDirectorName}</option>\r\n                        {this.props.teachernames.map(item => (                                \r\n                                <option key={item._id} name =\"ProgramDirectorName\" value={item._id}>{item.TeacherName}</option>\r\n                        )) } \r\n            </select>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n        </form>;\r\n       }\r\n       else{\r\n        content= <form onSubmit={this.SubmitHandler}>\r\n        <span className=\"inf-title\">\r\n                 Doctoral Programs \r\n\t\t</span>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Doctoral Program:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"ProgramName\" value={ProgramName} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Program Leader:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForTeachers(e.target.value)} value={this.state.value} required>\r\n                     <option value=\"\" selected disabled hidden> -- Please choose a teacher! -- </option>\r\n                        {this.props.teachernames.map(item => (                                \r\n                                <option key={item._id} name =\"ProgramDirectorName\" value={item._id}>{item.TeacherName}</option>\r\n                        )) } \r\n            </select>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                    Registration\r\n                </button>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n        <br />\r\n    <div className=\"targy\">  \r\n      <div className=\"atables\">\r\n            <table className=\"acontent-table\">\r\n                <thead>\r\n                 <tr>\r\n                 <th>Doctoral Program</th>\r\n                 <th>Program Leader</th>             \r\n                 <th>Edit</th>\r\n                 <th>Delete</th>     \r\n                 </tr>   \r\n                </thead>        \r\n                <tbody>\r\n                {this.props.items.map(item => (\r\n                  <tr key={item._id}>\r\n                    <td data-label=\"Program:\">{item.ProgramName}</td>\r\n                    <td data-label=\"Leader:\">{item.ProgramDirectorName}</td>                    \r\n                    <td data-label=\"Edit:\">\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.edit} \r\n                                data-mssg={item._id+\"|\"+item.ProgramName+\"|\"+item.ProgramDirectorName}\r\n                                onChange={ this.handleClick }/>\r\n                    </td>\r\n                    <td data-label=\"Del.:\">\r\n                        <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.delete} \r\n                                data-mssg={item._id+\"|\"+item.ProgramName+\"|\"+item.ProgramDirectorName}\r\n                                onChange={ this.handleClickforDelete } />\r\n                    </td>                     \r\n                  </tr>\r\n                ))} \r\n                </tbody>\r\n            </table>    \r\n            </div>\r\n         </div>  \r\n        </form>\r\n       }}\r\n\r\n     return (            \r\n        <div>          \r\n            {content}\r\n            <br /> \r\n        </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostAddNewSubjectForm;","import DeIkLogo from '../../Style/DeIKLogo.png';\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './AdminNav';\r\nimport PostFormNewDoctoralProgram from './PostFormsJS/PostAddNewProgramForm';\r\nimport '../../Style/adminpage.css';\r\n\r\n\r\nfunction DoctoralPrograms() {\r\n    useEffect(()=>{\r\n        fetchItems();\r\n        fetchTeacherNames();\r\n      },[]);\r\n    \r\n      const [items,setItems] = useState([]);\r\n      const [Teachernames,setTeacherNames] = useState([]);\r\n    \r\n      const fetchItems = async () =>{\r\n        const data = await fetch(\r\n          'http://phd.inf.unideb.hu/api/getdoctoralprograms'\r\n          \r\n        );\r\n        const items = await data.json();    \r\n        setItems(items);\r\n      } ;\r\n    \r\n     \r\n      const fetchTeacherNames = async () =>{\r\n        const teachername = await fetch(\r\n            'http://phd.inf.unideb.hu/api/NameAndEmail'\r\n            \r\n          );\r\n          const Teachernames = await teachername.json();    \r\n          setTeacherNames(Teachernames);  \r\n      };\r\n\r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n    <div className=\"containera\">\r\n        <div className=\"wrap-logina\">\r\n            <div className=\"img-wrapa\">\r\n                <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t</div>\r\n            <div className=\"titlea\"> \r\n                <span className=\"login-form-title\">\r\n                Doctoral School <br /> of Informatics\r\n\t\t\t    </span>\r\n            </div>\r\n                <Nav/>\r\n                <br />\r\n    <PostFormNewDoctoralProgram teachernames={Teachernames} items={items}/>   \r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default DoctoralPrograms;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostAddNewSubjectForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            SubjectID:'',\r\n            Subject:'',\r\n            SubjectEN:'',\r\n            Teacher:'',\r\n            DeleteSubjectID:'',\r\n            DeleteSubjectEN:'',\r\n            DeleteSubject:'',\r\n            DeleteTeacher:'',\r\n            edit:false,\r\n            delete:false,\r\n        }\r\n        this.handleChange = this.handleClick.bind(this);\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getsubjects',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitChangeHandlerForTeachers = (teacherId) =>{\r\n        const selectedTeacher = this.props.teachernames.find(teacher => teacher._id === teacherId)\r\n        this.setState({\r\n            Teacher: selectedTeacher.TeacherName                \r\n        })         \r\n    }\r\n\r\n    SubmitHandlerForEdit= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/editsubjects',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n        const datas = event.target.dataset.mssg.split('|');   \r\n        this.setState({      \r\n            edit: !this.state.edit,\r\n            SubjectEN: datas[3],\r\n            Teacher: datas[2],\r\n            Subject: datas[1],\r\n            SubjectID: datas[0]\r\n        })   \r\n    }\r\n\r\n    handleClickforDelete = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            DeleteSubjectEN: datas[3],\r\n            DeleteTeacher: datas[2],\r\n            DeleteSubject: datas[1],\r\n            DeleteSubjectID: datas[0],\r\n            delete: !this.state.delete,\r\n        })   \r\n    }\r\n\r\n    SubmitHandlerForDelete= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/deletesubjects',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n        \r\n        render(){\r\n            const{Subject,SubjectEN}=this.state;\r\n            let content = null;\r\n            if(this.state.delete){\r\n                content =  \r\n                <form onSubmit={this.SubmitHandlerForDelete}>\r\n                     <span className=\"inf-title\">Do you want to delete this Subject?</span>\r\n                <br />\r\n                <ul className=\"list-input\">\r\n                 <li>\r\n    \r\n                 <span className=\"ititle\">Subject (HU): {this.state.DeleteSubject}</span>\r\n                 </li>\r\n             </ul>\r\n             <br />\r\n             <ul className=\"list-input\">\r\n                 <li>\r\n    \r\n                 <span className=\"ititle\">Subject (EN): {this.state.DeleteSubjectEN}</span>\r\n                 </li>\r\n             </ul>\r\n             <br/>\r\n             <ul className=\"list-input\">\r\n                 <li>\r\n                 <span className=\"ititle\">Teacher's Name: {this.state.DeleteTeacher}</span>\r\n                 </li>\r\n             </ul>\r\n     \r\n             <ul className=\"list-input\">\r\n                 <li>\r\n                 <div className=\"container-login-form-btna\">\r\n                     <button type =\"submit\" className=\"login-form-btna\">\r\n                         Delete\r\n                     </button>\r\n                 </div>\r\n                 </li>\r\n             </ul>\r\n                </form>\r\n            }else{\r\n            if (this.state.edit) {\r\n                content =  \r\n            <form onSubmit={this.SubmitHandlerForEdit}>\r\n                <span className=\"inf-title\">\r\n                   Edit Subject\r\n                </span>\r\n           <br />\r\n               <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Subject (HU):\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                    <input className=\"inputa\" type=\"text\" name=\"Subject\" value={this.state.Subject} onChange={e => {\r\n                        this.setState({ Subject: e.target.value})}} required/>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Subject (EN):\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                    <input className=\"inputa\" type=\"text\" name=\"Subject\" value={this.state.SubjectEN} onChange={e => {\r\n                        this.setState({ SubjectEN: e.target.value})}} required/>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                       Teacher's name:\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForTeachers(e.target.value)} value={this.state.value} required>\r\n                <option value={this.state.Teacher} selected disabled hidden>{this.state.Teacher}</option>\r\n                        {this.props.teachernames.map(item => (                                \r\n                                <option key={item._id} name =\"Teacher\" value={item._id}>{item.TeacherName}</option>\r\n                        )) } \r\n            </select>\r\n            </div>\r\n                </li>\r\n            </ul>\r\n    \r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div className=\"container-login-form-btna\">\r\n                    <button type =\"submit\" className=\"login-form-btna\">\r\n                        Save\r\n                    </button>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n            </form>;\r\n           }\r\n           else{\r\n            content=  <form onSubmit={this.SubmitHandler}>\r\n            <span className=\"inf-title\">\r\n                 Subject Administration \r\n\t\t\t</span>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Subject's name (HU):\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                    <input className=\"inputa\" type=\"text\" name=\"Subject\" value={Subject} onChange={this.changeHandler} required/>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Subject's name (EN):\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                    <input className=\"inputa\" type=\"text\" name=\"SubjectEN\" value={SubjectEN} onChange={this.changeHandler} required/>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n    \r\n    \r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Teacher's name:\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForTeachers(e.target.value)} value={this.state.value} required>\r\n                         <option value=\"\" selected disabled hidden> -- Please choose a teacher! -- </option>\r\n                            {this.props.teachernames.map(item => (                                \r\n                                    <option key={item._id} name =\"Teacher\" value={item._id}>{item.TeacherName}</option>\r\n                            )) } \r\n                </select>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n    \r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div className=\"container-login-form-btna\">\r\n                    <button type =\"submit\" className=\"login-form-btna\">\r\n                        Registration\r\n                    </button>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n            <br />\r\n        <div className=\"targy\">  \r\n          <div className=\"atables\">\r\n                <table className=\"acontent-table\">\r\n                    <thead>\r\n                     <tr>\r\n                     <th>Subject (HU)</th>\r\n                     <th>Subject (EN)</th>\r\n                     <th>Teacher's name</th>            \r\n                     <th>Edit</th>\r\n                     <th>Delete</th>      \r\n                     </tr>   \r\n                    </thead>\r\n            \r\n                    \r\n                    <tbody>\r\n                    {this.props.items.map(item => (\r\n                      <tr key={item._id}>\r\n                        <td data-label=\"Subject (HU):\">{item.Subject}</td>\r\n                        <td data-label=\"Subject (EN):\">{item.SubjectEN}</td>\r\n                        <td data-label=\"Teacher:\">{item.Teacher}</td>                    \r\n                        <td data-label=\"Edit:\">\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.edit} \r\n                                data-mssg={item._id+\"|\"+item.Subject+\"|\"+item.Teacher+\"|\"+item.SubjectEN}\r\n                                onChange={ this.handleClick }/>\r\n                        </td>\r\n                        <td data-label=\"Del.:\">\r\n                            <input \r\n                                    type=\"checkbox\" \r\n                                    className=\"CheckBoxAdmin\"\r\n                                    checked={ this.state.delete} \r\n                                    data-mssg={item._id+\"|\"+item.Subject+\"|\"+item.Teacher+\"|\"+item.SubjectEN}\r\n                                    onChange={ this.handleClickforDelete } />\r\n                        </td>               \r\n                      </tr>\r\n                    ))} \r\n                    </tbody>\r\n                </table>    \r\n            </div>\r\n        </div>\r\n            </form>\r\n           }}\r\n    \r\n         return (            \r\n            <div>          \r\n                {content} \r\n                <br />   \r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PostAddNewSubjectForm;","import DeIkLogo from '../../Style/DeIKLogo.png';\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './AdminNav';\r\nimport PostFormNewSubject from './PostFormsJS/PostAddNewSubjectForm';\r\nimport '../../Style/adminpage.css';\r\n\r\n\r\nfunction Subjects() {\r\n    useEffect(()=>{\r\n        fetchItems();\r\n        fetchTeacherNames();\r\n      },[]);\r\n      \r\n      \r\n    \r\n      const [items,setItems] = useState([]);\r\n      const [Teachernames,setTeacherNames] = useState([]);\r\n    \r\n      const fetchItems = async () =>{\r\n        const data = await fetch(\r\n          'http://phd.inf.unideb.hu/api/getsubjects'\r\n          \r\n        );\r\n        const items = await data.json();    \r\n        setItems(items);\r\n      } ;\r\n\r\n      const fetchTeacherNames = async () =>{\r\n        const teachername = await fetch(\r\n            'http://phd.inf.unideb.hu/api/NameAndEmail'\r\n            \r\n          );\r\n          const Teachernames = await teachername.json();    \r\n          setTeacherNames(Teachernames);  \r\n      };\r\n    \r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n    <div className=\"containera\">\r\n        <div className=\"wrap-logina\">\r\n            <div className=\"img-wrapa\">\r\n                <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t</div>\r\n            <div className=\"titlea\"> \r\n                <span className=\"login-form-title\">\r\n                Doctoral School <br /> of Informatics\r\n\t\t\t    </span>\r\n            </div>\r\n                <Nav/>\r\n                <br />\r\n    <PostFormNewSubject teachernames={Teachernames} items={items}/>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Subjects;","\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './Nav';\r\nimport Userdata from './UserDataGetSet';\r\nfunction TakenCourses() {\r\n\r\n  useEffect(()=>{\r\n    fetchItems();    \r\n  },[]);\r\n  \r\n  const [items,setItems] = useState([]);\r\n\r\n  const fetchItems = async () =>{\r\n    const data = await fetch(\r\n      'http://phd.inf.unideb.hu/api/posts/'+Userdata.GetUserID()+'/history/h'\r\n      \r\n    );\r\n   \r\n    \r\n    const items = await data.json(); \r\n      \r\n    setItems(items);    \r\n\r\n  } ;\r\n  \r\n  if(items.length!==0){\r\n    return (\r\n      <div>    \r\n      <Nav />\r\n  \r\n      <div className=\"targy\">        \r\n      <br/>\r\n      <span className=\"info-titleuser\">Course History</span>     \r\n      <br/>\r\n      <div className=\"tables\">\r\n        \r\n        <table className=\"content-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Subject</th>\r\n              <th>Teacher</th> \r\n              <th>Status</th>  \r\n              </tr>   \r\n            </thead>\r\n        \r\n                \r\n    \r\n            <tbody>\r\n                {              \r\n                items.map(item => (\r\n                  <tr key={item._id}>\r\n                    <td data-label=\"Subject\">{item.targy}</td>\r\n                    <td data-label=\"Teacher\">{item.oktato}</td> \r\n                    <td data-label=\"Status\">{item.tstatus}</td>\r\n                  </tr>\r\n                ))\r\n                \r\n                } \r\n            </tbody>\r\n      </table>    \r\n  </div>\r\n  </div>\r\n    </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n      <div>    \r\n      <Nav />\r\n  \r\n      <div className=\"targy\">        \r\n      <br/>\r\n      <span className=\"info-titleuser\">Course History</span>     \r\n      <br/>   \r\n      <div className=\"tables\">\r\n        \r\n        <table className=\"content-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Subject</th>\r\n              <th>Teacher</th> \r\n              <th>Status</th>              \r\n              </tr>   \r\n            </thead>\r\n            <tbody>\r\n                  <tr>\r\n                    <td data-label=\"Subject\"></td>\r\n                    <td data-label=\"Teacher\"></td>\r\n                    <td data-label=\"Status\"></td> \r\n                  </tr>\r\n            </tbody>\r\n      </table>    \r\n  </div>\r\n  </div>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default TakenCourses;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostRegUserForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            firstname:'',\r\n            lastname:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            neptuncode:'',\r\n            supervisor:'',\r\n            supervisorID:'',\r\n            doctoralprogram:'',\r\n            coursetype:'',\r\n            semester:'',\r\n            programdirector:'',\r\n        }\r\n    }\r\n\r\n\r\n    SubmitChangeHandlerForProgramDirector = (targyId) =>{\r\n        const selectedTargy = this.props.Porgramitems.find(doctoralprogram => doctoralprogram._id === targyId)\r\n        this.setState({\r\n            doctoralprogram: selectedTargy.ProgramName,\r\n            programdirector: selectedTargy.ProgramDirectorName,\r\n        })}\r\n\r\n    SubmitChangeHandlerForSupervisor = (teacherId) =>{\r\n            const selectedTeacher = this.props.teachernames.find(teacher => teacher._id === teacherId)\r\n            this.setState({\r\n                supervisor: selectedTeacher.TeacherName,\r\n                supervisorID: selectedTeacher._id                \r\n            })         \r\n        }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/RegUser',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage();\r\n        })\r\n        .catch(error => {\r\n            alert(\"An error occurred during the registration. The registration failed!\");\r\n            refreshPage();\r\n        })\r\n    }\r\n    render(){\r\n        const{firstname,lastname,email,phonenumber,neptuncode,programdirector}=this.state;\r\n        return (            \r\n        <form onSubmit={this.SubmitHandler}>\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                   Email\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"email\" name=\"email\" value={email} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Phone Number\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"tel\" name=\"phonenumber\" value={phonenumber} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    First name\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"firstname\" value={firstname} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Last name\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"lastname\" value={lastname} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            </ul>\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Supervisor\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            \r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForSupervisor(e.target.value)} value={this.state.value} required>\r\n                     <option value=\"\" selected disabled hidden> -- Please choose a teacher! -- </option>\r\n                        {this.props.teachernames.map(item => (                                \r\n                                <option key={item._id} name =\"supervisor\" value={item._id}>{item.TeacherName}</option>\r\n                        )) } \r\n            </select>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Neptun code\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"neptuncode\" value={neptuncode} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            </ul>\r\n            \r\n         <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Doctoral Program\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            <select className=\"inputa\" onChange={(e) => this.SubmitChangeHandlerForProgramDirector(e.target.value)} value={this.state.value} required>\r\n                            <option value=\"\" selected disabled hidden> -- Please choose a Doctoral Program! -- </option>\r\n                            {this.props.Porgramitems.map(item => (                                \r\n                                <option key={item._id} name =\"ProgramName\" value={item._id}>{item.ProgramName}</option>\r\n                        )) } \r\n            </select>\r\n\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">    \r\n                    Program Leader\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input  className=\"inputa\"  disabled=\"disabled\"  placeholder=\"Automatic Field\" type=\"text\" name=\"programdirector\" value={programdirector} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">    \r\n                    Course Type\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <select name=\"coursetype\" className=\"inputa\" onChange={this.changeHandler} required>\r\n                    <option value=\"\" selected disabled hidden> -- Please choose the type of course! -- </option>\r\n                    <option value=\"Nappali\">Nappali</option>\r\n                    <option value=\"Levelező\">Levelező</option>\r\n                </select>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Semester\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n            <select name=\"semester\" className=\"inputa\" onChange={this.changeHandler} required>\r\n                    <option value=\"\" selected disabled hidden> -- Please choose a number! -- </option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n            </select>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n        \r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                    Registration\r\n                </button>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostRegUserForm;\r\n","import DeIkLogo from '../../Style/DeIKLogo.png' \r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/adminpage.css';\r\nimport PostRegUserForm from './PostFormsJS/PostRegUserForm';\r\nimport Nav from './AdminNav';\r\n\r\n\r\n\r\n\r\nfunction AdminPageRegUser() {\r\n\r\n  useEffect(()=>{\r\n    fetchItems();    \r\n    fetchTeacherNames();\r\n  },[]);\r\n\r\n  const [items,setItems] = useState([]);\r\n  const [Teachernames,setTeacherNames] = useState([]);\r\n\r\n  const fetchItems = async () =>{\r\n    const data = await fetch(\r\n      'http://phd.inf.unideb.hu/api/getdoctoralprograms'\r\n    );\r\n    const items = await data.json();    \r\n    setItems(items);\r\n  };\r\n\r\n  const fetchTeacherNames = async () =>{\r\n    const teachername = await fetch(\r\n        'http://phd.inf.unideb.hu/api/NameAndEmail'\r\n        \r\n      );\r\n      const Teachernames = await teachername.json();    \r\n      setTeacherNames(Teachernames);  \r\n  };\r\n\r\n  \r\n\r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n<div className=\"containera\">\r\n    <div className=\"wrap-logina\">\r\n        <div className=\"img-wrapa\">\r\n            <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n        </div>\r\n        <div className=\"titlea\"> \r\n            <span className=\"login-form-title\">\r\n            Doctoral School <br /> of Informatics\r\n\t\t\t</span>\r\n        </div>\r\n            <Nav/>\r\n            <br />\r\n            <span className=\"inf-title\">\r\n                 User Registration \r\n\t\t\t</span>\r\n            <br />\r\n            <PostRegUserForm Porgramitems={items} teachernames={Teachernames}/>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default AdminPageRegUser;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostRegUserForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            firstname:'',\r\n            lastname:'',\r\n            email:'',\r\n            username:'',\r\n            pass:''\r\n        }\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/RegAdmin',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(\"An error occurred during the registration. The registration failed!\");\r\n            refreshPage();\r\n        })\r\n    }\r\n    render(){\r\n        const{firstname,lastname,email,username,pass}=this.state;\r\n        return (            \r\n        <form onSubmit={this.SubmitHandler}>\r\n        <div>\r\n            <span className=\"txt1\">\r\n                    Email\r\n            </span>\r\n        </div>\r\n            \r\n        <div className=\"wrap-email-input\">\r\n            <input className=\"inputa\" type=\"email\" name=\"email\" value={email} onChange={this.changeHandler} required/>\r\n        </div>\r\n        <br />\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    First Name\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"firstname\" value={firstname} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Last Name\r\n                </span>\r\n            </div>\r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"lastname\" value={lastname} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            </ul>\r\n            <br />\r\n\r\n            \r\n            <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Username\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"text\" name=\"username\" value={username} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Password\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"pass\" value={pass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                    Registration\r\n                </button>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostRegUserForm;","import React from 'react';\r\nimport DeIkLogo from '../../Style/DeIKLogo.png' \r\nimport '../../Style/adminpage.css';\r\nimport Nav from './AdminNav';\r\nimport PostRegAdminForm from './PostFormsJS/PostRegAdminForm';\r\n\r\nfunction AdminPageRegAdmin() {\r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n<div className=\"containera\">\r\n    <div className=\"wrap-logina\">\r\n        <div className=\"img-wrapa\">\r\n            <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n        </div>\r\n        <div className=\"titlea\"> \r\n            <span className=\"login-form-title\">\r\n            Doctoral School <br /> of Informatics\r\n\t\t\t</span>\r\n        </div>\r\n       <Nav/>\r\n           <br />\r\n            <span className=\"inf-title\">\r\n                 Admin Registration \r\n\t\t\t</span>\r\n            <br />\r\n            <PostRegAdminForm/> \r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default AdminPageRegAdmin;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostAddNewTeacher extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            TeacherName:'',\r\n            TeacherEmail:'',\r\n            EditTeacherName:'',\r\n            EditTeacherEmail:'',\r\n            EditTeacherID:'',\r\n            edit:false,\r\n            DeleteTeacherEmail:'',\r\n            DeleteTeacherName:'',\r\n            DeleteTeacherID:'',\r\n            delete:false\r\n        }\r\n        this.handleChange = this.handleClick.bind(this);\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getteachers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForEdit= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/editteachers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForDelete= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/deleteteachers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n        const datas = event.target.dataset.mssg.split('|');   \r\n        this.setState({      \r\n            edit: !this.state.edit,\r\n            EditTeacherEmail: datas[2],\r\n            EditTeacherName: datas[1],\r\n            EditTeacherID: datas[0]\r\n        })   \r\n    }\r\n\r\n    handleClickforDelete = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            DeleteTeacherEmail: datas[2],\r\n            DeleteTeacherName: datas[1],\r\n            DeleteTeacherID: datas[0],\r\n            delete: !this.state.delete,\r\n        })   \r\n    }\r\n    \r\n    render(){\r\n        const{TeacherName,TeacherEmail}=this.state;\r\n        let content = null;\r\n        if(this.state.delete){\r\n            content =  \r\n            <form onSubmit={this.SubmitHandlerForDelete}>\r\n                 <span className=\"inf-title\">Do you want to delete this teacher?</span>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n\r\n             <span className=\"ititle\">Email: {this.state.DeleteTeacherEmail}</span>\r\n             </li>\r\n         </ul>\r\n         <br />\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <span className=\"ititle\">Teacher's name: {this.state.DeleteTeacherName}</span>\r\n             </li>\r\n         </ul>\r\n \r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Delete\r\n                 </button>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n            </form>\r\n        }\r\n        else{\r\n        if (this.state.edit) {\r\n             content =  \r\n         <form onSubmit={this.SubmitHandlerForEdit}>\r\n             <span className=\"inf-title\">\r\n                Edit Teachers\r\n\t\t</span>\r\n        <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n             <div>\r\n                 <span className=\"txt1\">\r\n                     Teacher's name:\r\n                 </span>\r\n             </div>\r\n             \r\n             <div className=\"wrap-inputa\">\r\n                 <input className=\"inputa\" type=\"text\" name=\"EditTeacherName\" value={this.state.EditTeacherName} onChange={e => {\r\n                     this.setState({ EditTeacherName: e.target.value})}} required/>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div>\r\n                 <span className=\"txt1\">\r\n                     Teacher's email:\r\n                 </span>\r\n             </div>\r\n             \r\n             <div className=\"wrap-inputa\">\r\n                 <input className=\"inputa\" type=\"email\" name=\"EditTeacherEmail\" value={this.state.EditTeacherEmail} onChange={e => {\r\n                     this.setState({ EditTeacherEmail: e.target.value})}} required/>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n \r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Save\r\n                 </button>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n         </form>;\r\n        }\r\n        else{\r\n         content= <form onSubmit={this.SubmitHandler}>\r\n             <span className=\"inf-title\">\r\n                Teacher Administration \r\n\t\t</span>\r\n        <br />\r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Teacher's name:\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                    <input className=\"inputa\" type=\"text\" name=\"TeacherName\" value={TeacherName} onChange={this.changeHandler} required/>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div>\r\n                    <span className=\"txt1\">\r\n                        Teacher's email:\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"wrap-inputa\">\r\n                    <input className=\"inputa\" type=\"email\" name=\"TeacherEmail\" value={TeacherEmail} onChange={this.changeHandler} required/>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n    \r\n            <ul className=\"list-input\">\r\n                <li>\r\n                <div className=\"container-login-form-btna\">\r\n                    <button type =\"submit\" className=\"login-form-btna\">\r\n                        Registration\r\n                    </button>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n           \r\n        <div className=\"targy\">  \r\n          <div className=\"atables\">\r\n                <table className=\"acontent-table\">\r\n                    <thead>\r\n                     <tr>\r\n                     <th>Teacher's name</th>\r\n                     <th>Email</th>             \r\n                     <th>Edit</th> \r\n                     <th>Delete</th>     \r\n                     </tr>   \r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.items.map(item => (\r\n                      <tr key={item._id}>\r\n                        <td data-label=\"Name\">{item.TeacherName}</td>\r\n                        <td data-label=\"Email\">{item.TeacherEmail}</td>                    \r\n                        <td data-label=\"Edit:\">\r\n                            <input \r\n                                        type=\"checkbox\"\r\n                                        className=\"CheckBoxAdmin\"\r\n                                        checked={ this.state.edit} \r\n                                        data-mssg={item._id+\"|\"+item.TeacherName+\"|\"+item.TeacherEmail}\r\n                                        onChange={ this.handleClick } />\r\n                        </td>\r\n                        <td data-label=\"Del.:\">\r\n                            <input \r\n                                    type=\"checkbox\"\r\n                                    className=\"CheckBoxAdmin\"\r\n                                    checked={ this.state.delete} \r\n                                    data-mssg={item._id+\"|\"+item.TeacherName+\"|\"+item.TeacherEmail}\r\n                                    onChange={ this.handleClickforDelete } />\r\n                        </td>                \r\n                      </tr>\r\n                    ))} \r\n                    </tbody>\r\n                </table>   \r\n            </div>\r\n        </div>\r\n        </form>;\r\n        }}\r\n        return ( \r\n        <div>          \r\n            {content}\r\n            <br />  \r\n        </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostAddNewTeacher;","import DeIkLogo from '../../Style/DeIKLogo.png';\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './AdminNav';\r\nimport PostFormNewTeacher from './PostFormsJS/PostAddNewTeacher';\r\nimport '../../Style/adminpage.css';\r\n\r\nfunction Subjects() {\r\n    useEffect(()=>{\r\n        fetchItems();\r\n      },[]);\r\n      \r\n      const [items,setItems] = useState([]);\r\n    \r\n      const fetchItems = async () =>{\r\n        const data = await fetch(\r\n          'http://phd.inf.unideb.hu/api/getteachers'\r\n          \r\n        );\r\n        const items = await data.json();    \r\n        setItems(items);\r\n      };\r\n   \r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n    <div className=\"containera\">\r\n        <div className=\"wrap-logina\">\r\n            <div className=\"img-wrapa\">\r\n                <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t</div>\r\n            <div className=\"titlea\"> \r\n                <span className=\"login-form-title\">\r\n                Doctoral School <br /> of Informatics\r\n\t\t\t    </span>\r\n            </div>\r\n                <Nav/>\r\n        <br />\r\n    <PostFormNewTeacher items={items}/>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Subjects;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\n\r\nclass PostUserAdministration extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            firstname:'',\r\n            UserID:'',\r\n            lastname:'',\r\n            email:'',\r\n            phonenumber:'',\r\n            neptuncode:'',\r\n            supervisor:'',\r\n            doctoralprogram:'',\r\n            coursetype:'',\r\n            semester:'',\r\n            programdirector:'',\r\n            getusersubjects:false,\r\n            administrate:false,\r\n            getadministrate:false,\r\n            onlynotadministrated:false,\r\n            pending:false,\r\n            getuserpendingsubject:false,\r\n            acceptpending:false,\r\n            declinepending:false,\r\n            resendpending:false,\r\n            pendingSubjects:[],\r\n            pendingUserSubjects:[],\r\n            TakenCourses:[],\r\n            CurrentCourses:[],\r\n            notadministratedUsers:[],\r\n            notadministratedUserSubjects:[],\r\n            Subject:'',\r\n            Teacher:'',\r\n            Status:'',\r\n            PostID:'',\r\n        }\r\n        this.handleChange = this.handleClick.bind(this);\r\n    }\r\n\r\n    refreshPage() {\r\n        window.location.reload(false)\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n\r\n    handleClick = event => {  \r\n       const datas = event.target.dataset.mssg.split('|'); \r\n       \r\n       fetch('http://phd.inf.unideb.hu/api/posts/'+datas[0]+'/history/h')\r\n        .then((response) => response.json())\r\n          .then((responseData) => {\r\n            fetch('http://phd.inf.unideb.hu/api/posts/'+datas[0])\r\n            .then((response) => response.json())\r\n              .then((resforCurrentSubjects) => {\r\n                this.setState({\r\n                    CurrentCourses:JSON.stringify(resforCurrentSubjects),\r\n                    TakenCourses:JSON.stringify(responseData),\r\n                    getusersubjects: !this.state.getusersubjects,\r\n                    UserID:datas[0],\r\n                    email:datas[1],\r\n                    firstname:datas[2],\r\n                    lastname:datas[3],\r\n                    phonenumber:datas[4],\r\n                    neptuncode:datas[5],\r\n                    supervisor:datas[6],\r\n                    doctoralprogram:datas[7],\r\n                    programdirector:datas[8],\r\n                    coursetype:datas[9],\r\n                    semester:datas[10],})\r\n            })\r\n            })         \r\n        }\r\n\r\n    handleClickForNotAdministrated = event => {  \r\n    fetch('http://phd.inf.unideb.hu/api/posts/subject/notadministrated')\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n        this.setState({\r\n            notadministratedUsers:JSON.stringify(responseData),\r\n            onlynotadministrated:!this.state.onlynotadministrated})})\r\n    }\r\n\r\n    handleClickForAdministration = event => {  \r\n        const datas = event.target.dataset.mssg.split('|'); \r\n        fetch('http://phd.inf.unideb.hu/api/posts/'+datas[0]+'/getusernotadministratedsubjects')\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n        this.setState({\r\n            notadministratedUserSubjects:JSON.stringify(responseData),\r\n            administrate: !this.state.administrate,\r\n            UserID:datas[0],\r\n            email:datas[1],\r\n            firstname:datas[2],\r\n            lastname:datas[3],\r\n            phonenumber:datas[4],\r\n            neptuncode:datas[5],\r\n            supervisor:datas[6],\r\n            doctoralprogram:datas[7],\r\n            programdirector:datas[8],\r\n            coursetype:datas[9],\r\n            semester:datas[10],})\r\n        })\r\n    }\r\n\r\n    handleClickForAdministrateSubject = event => {  \r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            getadministrate: !this.state.getadministrate,\r\n            PostID:datas[0],\r\n            Subject:datas[1],\r\n            Teacher:datas[2],\r\n            Status:datas[3],});\r\n    }\r\n\r\n    SubmitHandlerForAdministrate= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/PostAdministrate',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            fetch('http://phd.inf.unideb.hu/api/posts/'+this.state.UserID+'/getusernotadministratedsubjects')\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n            this.setState({\r\n                notadministratedUserSubjects:JSON.stringify(responseData),\r\n                getadministrate:!this.state.getadministrate})})\r\n        })\r\n        .catch(error => {\r\n            alert(error) \r\n        })\r\n    }\r\n    \r\n    handleClickForPendingSubjects = event => {  \r\n        fetch('http://phd.inf.unideb.hu/api/getpendingusers')\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n        this.setState({\r\n            pendingSubjects:JSON.stringify(responseData),\r\n            pending: !this.state.pending,\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClickForGetUserPendingSubject= event => {  \r\n        const datas = event.target.dataset.mssg.split('|'); \r\n        fetch('http://phd.inf.unideb.hu/api/getpendingusers/'+datas[0]+'/getuserpendingsubjects')\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n        this.setState({\r\n            pendingUserSubjects:JSON.stringify(responseData),\r\n            getuserpendingsubject: !this.state.getuserpendingsubject,\r\n            UserID:datas[0],\r\n            email:datas[1],\r\n            firstname:datas[2],\r\n            lastname:datas[3],\r\n            phonenumber:datas[4],\r\n            neptuncode:datas[5],\r\n            supervisor:datas[6],\r\n            doctoralprogram:datas[7],\r\n            programdirector:datas[8],\r\n            coursetype:datas[9],\r\n            semester:datas[10],})\r\n        })\r\n    }\r\n\r\n    handleClickForAccept = event => {  \r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            acceptpending: !this.state.acceptpending,\r\n            PostID:datas[0],\r\n            Subject:datas[1],\r\n            Teacher:datas[2],\r\n            Status:datas[3],});\r\n    }\r\n\r\n    handleClickForDecline = event => {  \r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            declinepending: !this.state.declinepending,\r\n            PostID:datas[0],\r\n            Subject:datas[1],\r\n            Teacher:datas[2],\r\n            Status:datas[3],});\r\n    }\r\n\r\n    handleClickForResend = event => {  \r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            resendpending: !this.state.resendpending,\r\n            PostID:datas[0],\r\n            Subject:datas[1],\r\n            Teacher:datas[2],\r\n            Status:datas[3],});\r\n    }\r\n\r\n    SubmitHandlerForDecline= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getpendingusers/pending/decline',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            fetch('http://phd.inf.unideb.hu/api/getpendingusers/'+this.state.UserID+'/getuserpendingsubjects')\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n            this.setState({\r\n                pendingUserSubjects:JSON.stringify(responseData),\r\n                declinepending: !this.state.declinepending})})\r\n        })\r\n        .catch(error => {\r\n            alert(error) \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForResend= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getpendingusers/pending/resend',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            fetch('http://phd.inf.unideb.hu/api/getpendingusers/'+this.state.UserID+'/getuserpendingsubjects')\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n            this.setState({\r\n                pendingUserSubjects:JSON.stringify(responseData),\r\n                resendpending: !this.state.resendpending})})\r\n        })\r\n        .catch(error => {\r\n            alert(error) \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForAccept= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getpendingusers/pending/accept',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            fetch('http://phd.inf.unideb.hu/api/getpendingusers/'+this.state.UserID+'/getuserpendingsubjects')\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n            this.setState({\r\n                pendingUserSubjects:JSON.stringify(responseData),\r\n                acceptpending: !this.state.acceptpending})})\r\n        })\r\n        .catch(error => {\r\n            alert(error) \r\n        })\r\n    }\r\n\r\n    render(){\r\n    let content = null;\r\n    if(this.state.resendpending){\r\n        content = <form onSubmit={this.SubmitHandlerForResend}>\r\n        <br />\r\n            <span className=\"inf-title\">Do you want to resend this subject registration?</span>\r\n       <br />\r\n       <ul className=\"list-input\">\r\n            <li>\r\n                <span className=\"ititle\">Subject's Name: {this.state.Subject}</span>\r\n             </li>\r\n        </ul>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n             <li>\r\n                <span className=\"ititle\">Teacher's Name: {this.state.Teacher}</span>\r\n            </li>\r\n        </ul>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n             <li>\r\n                <span className=\"ititle\">Student's Name: {this.state.firstname + \" \" + this.state.lastname}</span>\r\n            </li>\r\n        </ul>\r\n    \r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                 Resend\r\n                </button>\r\n        </div>\r\n        </li>\r\n    </ul>\r\n       </form>\r\n    }else{\r\n    if(this.state.declinepending){\r\n        content = <form onSubmit={this.SubmitHandlerForDecline}>\r\n        <br />\r\n            <span className=\"inf-title\">Do you want to decline this subject registration?</span>\r\n       <br />\r\n       <ul className=\"list-input\">\r\n            <li>\r\n                <span className=\"ititle\">Subject's Name: {this.state.Subject}</span>\r\n             </li>\r\n        </ul>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n             <li>\r\n                <span className=\"ititle\">Teacher's Name: {this.state.Teacher}</span>\r\n            </li>\r\n        </ul>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n             <li>\r\n                <span className=\"ititle\">Student's Name: {this.state.firstname + \" \" + this.state.lastname}</span>\r\n            </li>\r\n        </ul>\r\n    \r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                 Decline\r\n                </button>\r\n        </div>\r\n        </li>\r\n    </ul>\r\n       </form>\r\n    }else{\r\n    if(this.state.acceptpending){\r\n    content = <form onSubmit={this.SubmitHandlerForAccept}>\r\n    <br />\r\n        <span className=\"inf-title\">Do you want to accept this subject registration?</span>\r\n   <br />\r\n   <ul className=\"list-input\">\r\n        <li>\r\n            <span className=\"ititle\">Subject's Name: {this.state.Subject}</span>\r\n         </li>\r\n    </ul>\r\n    <br />\r\n    <ul className=\"list-input\">\r\n         <li>\r\n            <span className=\"ititle\">Teacher's Name: {this.state.Teacher}</span>\r\n        </li>\r\n    </ul>\r\n    <br />\r\n    <ul className=\"list-input\">\r\n         <li>\r\n            <span className=\"ititle\">Student's Name: {this.state.firstname + \" \" + this.state.lastname}</span>\r\n        </li>\r\n    </ul>\r\n\r\n    <ul className=\"list-input\">\r\n        <li>\r\n        <div className=\"container-login-form-btna\">\r\n            <button type =\"submit\" className=\"login-form-btna\">\r\n             Accept\r\n            </button>\r\n    </div>\r\n    </li>\r\n</ul>\r\n   </form>\r\n    }else{\r\n    if(this.state.getuserpendingsubject){\r\n        let UserpendingSubjects = JSON.parse(this.state.pendingUserSubjects)\r\n        content = <div>\r\n        <br/>\r\n    <span className=\"inf-title\">{this.state.firstname + \" \"+ this.state.lastname+\"'s\"} pending subjects</span>\r\n        <br/>\r\n            <div className=\"targy\">           \r\n            <div className=\"atables\">\r\n             <table className=\"acontent-table\">\r\n                <thead>\r\n                 <tr>\r\n                    <th>Subject</th>\r\n                    <th>Teacher</th>             \r\n                    <th>Status</th> \r\n                    <th>Accept</th>\r\n                    <th>Decline</th>   \r\n                    <th>Resend</th>   \r\n                </tr>   \r\n            </thead>\r\n  \r\n        <tbody>\r\n        { UserpendingSubjects.map(item => (\r\n            <tr key={item._id}>\r\n              <td data-label=\"Subject:\">{item.targy}</td>\r\n              <td data-label=\"Teacher:\">{item.oktato}</td>  \r\n              <td data-label=\"Status:\">{item.tstatus}</td>                    \r\n              <td data-label=\"Accept:\">\r\n              <input \r\n                    type=\"checkbox\" \r\n                    className=\"CheckBoxAdmin\"\r\n                    checked={ this.state.getadministrate} \r\n                    data-mssg={item._id+'|'+item.targy+'|'+item.oktato+'|'+item.tstatus}\r\n                     onChange={ this.handleClickForAccept }/>\r\n              </td>\r\n              <td data-label=\"Decline:\">\r\n              <input \r\n                    type=\"checkbox\" \r\n                    className=\"CheckBoxAdmin\"\r\n                    checked={ this.state.getadministrate} \r\n                    data-mssg={item._id+'|'+item.targy+'|'+item.oktato+'|'+item.tstatus}\r\n                     onChange={ this.handleClickForDecline }/>\r\n              </td>  \r\n              <td data-label=\"Resend:\">\r\n              <input \r\n                    type=\"checkbox\" \r\n                    className=\"CheckBoxAdmin\"\r\n                    checked={ this.state.getadministrate} \r\n                    data-mssg={item._id+'|'+item.targy+'|'+item.oktato+'|'+item.tstatus}\r\n                     onChange={ this.handleClickForResend }/>\r\n              </td>            \r\n            </tr>\r\n          ))} \r\n        </tbody>\r\n        </table>  \r\n        </div>  \r\n    </div></div>\r\n    }else{\r\n    if(this.state.pending){\r\n        let allPendingSubjects = JSON.parse(this.state.pendingSubjects)\r\n        let table = null;\r\n        if(allPendingSubjects.length === 0){\r\n            table = <div><span className=\"ititle\">There are no pending subjetcs.</span></div>\r\n        }\r\n        else{\r\n            table =   <div className=\"atables\">\r\n            <table className=\"acontent-table\">\r\n              <thead>\r\n                  <tr>\r\n                   <th>Email</th>\r\n                   <th>First Name</th>             \r\n                   <th>Last Name</th>\r\n                   <th>Neptun code</th>  \r\n                   <th>Supervisor</th>\r\n                   <th>Subjects</th>\r\n                  </tr>     \r\n              </thead>\r\n    \r\n          <tbody>\r\n          {allPendingSubjects.map(item => (\r\n              <tr key={item._id}>\r\n                <td data-label=\"Email:\">{item.email}</td>\r\n                      <td data-label=\"First name:\">{item.firstname}</td>\r\n                      <td data-label=\"Last name:\">{item.lastname}</td>  \r\n                      <td data-label=\"Neptun code:\">{item.neptuncode}</td>  \r\n                      <td data-label=\"Supervisor:\">{item.supervisor}</td>  \r\n                      <td data-label=\"Subjects:\">\r\n                          <input \r\n                                  type=\"checkbox\" \r\n                                  className=\"CheckBoxAdmin\"\r\n                                  checked={ this.state.getuserpendingsubject} \r\n                                  data-mssg={item._id+'|'+item.email+'|'+item.firstname+'|'+item.lastname+'|'+item.phonenumber+\r\n                                  '|'+ item.neptuncode+'|'+item.supervisor+'|'+item.doctoralprogram+'|'+item.programdirector+\r\n                                  '|'+item.coursetype+'|'+item.semester}\r\n                                  onChange={ this.handleClickForGetUserPendingSubject }/>\r\n                      </td>            \r\n              </tr>\r\n            ))} \r\n          </tbody>\r\n          </table>  \r\n          </div>  \r\n   \r\n        }\r\n        content = \r\n        <div>\r\n        <br/>\r\n        <span className=\"inf-title\">All user with pending subject</span>\r\n        <br/>\r\n        \r\n        <div className=\"targy\">    \r\n         <ul className=\"list-containers\">\r\n             <li className=\"paddingb\">\r\n                Show all user:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={ this.handleClickForPendingSubjects }/>\r\n             </li> \r\n             <li className=\"paddingb\">\r\n                Show not administered:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={ this.handleClickForNotAdministrated }/>\r\n             </li> \r\n        </ul>      \r\n      {table}\r\n    </div>\r\n    </div>\r\n    }else{\r\n    if(this.state.getadministrate){\r\n        content = <form onSubmit={this.SubmitHandlerForAdministrate}>\r\n               <br />\r\n        <span className=\"inf-title\">Do you want to administer this subject registration?</span>\r\n   <br />\r\n   <ul className=\"list-input\">\r\n        <li>\r\n            <span className=\"ititle\">Subject's Name: {this.state.Subject}</span>\r\n         </li>\r\n    </ul>\r\n    <br />\r\n    <ul className=\"list-input\">\r\n         <li>\r\n            <span className=\"ititle\">Teacher's Name: {this.state.Teacher}</span>\r\n        </li>\r\n    </ul>\r\n    <br />\r\n    <ul className=\"list-input\">\r\n         <li>\r\n            <span className=\"ititle\">Student's Name: {this.state.firstname + \" \" + this.state.lastname}</span>\r\n        </li>\r\n    </ul>\r\n\r\n    <ul className=\"list-input\">\r\n        <li>\r\n        <div className=\"container-login-form-btna\">\r\n            <button type =\"submit\" className=\"login-form-btna\">\r\n             Administer\r\n            </button>\r\n    </div>\r\n    </li>\r\n</ul>\r\n   </form>\r\n    }\r\n    else{\r\n    if(this.state.administrate){\r\n        let notadministratedsubject = JSON.parse(this.state.notadministratedUserSubjects)\r\n        content = <div>\r\n        <br/>\r\n    <span className=\"inf-title\">{this.state.firstname + \" \"+ this.state.lastname+\"'s\"} subjects</span>\r\n        <br/>\r\n            <div className=\"targy\">           \r\n            <div className=\"atables\">\r\n             <table className=\"acontent-table\">\r\n                <thead>\r\n                 <tr>\r\n                    <th>Subject</th>\r\n                    <th>Teacher</th>             \r\n                    <th>Status</th> \r\n                    <th>Administer</th>   \r\n                </tr>   \r\n            </thead>\r\n  \r\n        <tbody>\r\n        {notadministratedsubject.map(item => (\r\n            <tr key={item._id}>\r\n              <td data-label=\"Subject:\">{item.targy}</td>\r\n              <td data-label=\"Teacher:\">{item.oktato}</td>  \r\n              <td data-label=\"Status:\">{item.tstatus}</td>                    \r\n              <td data-label=\"Administer:\">\r\n              <input \r\n                    type=\"checkbox\" \r\n                    className=\"CheckBoxAdmin\"\r\n                    checked={ this.state.getadministrate} \r\n                    data-mssg={item._id+'|'+item.targy+'|'+item.oktato+'|'+item.tstatus}\r\n                     onChange={ this.handleClickForAdministrateSubject }/>\r\n              </td>             \r\n            </tr>\r\n          ))} \r\n        </tbody>\r\n        </table>  \r\n        </div>  \r\n    </div></div>\r\n    }else{\r\n    if(this.state.onlynotadministrated){\r\n        let notadminUsers = JSON.parse(this.state.notadministratedUsers);\r\n        let table = null;\r\n        if(notadminUsers.length === 0){\r\n            table = <div><span className=\"ititle\">There are no not administered subjetcs.</span></div>\r\n        }\r\n        else{\r\n            table =   <div className=\"atables\">\r\n            <table className=\"acontent-table\">\r\n              <thead>\r\n                  <tr>\r\n                   <th>Email</th>\r\n                   <th>First Name</th>             \r\n                   <th>Last Name</th>\r\n                   <th>Neptun code</th>  \r\n                   <th>Supervisor</th>\r\n                   <th>Subjects</th>\r\n                  </tr>     \r\n              </thead>\r\n    \r\n          <tbody>\r\n          {notadminUsers.map(item => (\r\n              <tr key={item._id}>\r\n                <td data-label=\"Email:\">{item.email}</td>\r\n                      <td data-label=\"First name:\">{item.firstname}</td>\r\n                      <td data-label=\"Last name:\">{item.lastname}</td>  \r\n                      <td data-label=\"Neptun code:\">{item.neptuncode}</td>  \r\n                      <td data-label=\"Supervisor:\">{item.supervisor}</td>  \r\n                      <td data-label=\"Subjects:\">\r\n                          <input \r\n                                  type=\"checkbox\" \r\n                                  className=\"CheckBoxAdmin\"\r\n                                  checked={ this.state.administrate} \r\n                                  data-mssg={item._id+'|'+item.email+'|'+item.firstname+'|'+item.lastname+'|'+item.phonenumber+\r\n                                  '|'+ item.neptuncode+'|'+item.supervisor+'|'+item.doctoralprogram+'|'+item.programdirector+\r\n                                  '|'+item.coursetype+'|'+item.semester}\r\n                                  onChange={ this.handleClickForAdministration }/>\r\n                      </td>            \r\n              </tr>\r\n            ))} \r\n          </tbody>\r\n          </table>  \r\n          </div>  \r\n   \r\n        }\r\n        content = \r\n    <div>\r\n        <br/>\r\n        <span className=\"inf-title\">Not Administered Users</span>\r\n        <br/>\r\n        \r\n    <div className=\"targy\">    \r\n         <ul className=\"list-containers\">\r\n             <li className=\"paddingb\">\r\n                Show pending subjects:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={ this.handleClickForPendingSubjects }/>\r\n             </li> \r\n             <li className=\"paddingb\">\r\n                Show all users:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={ this.handleClickForNotAdministrated }/>\r\n             </li> \r\n        </ul>      \r\n      {table}\r\n    </div>\r\n    </div>\r\n    }\r\n    else{\r\n    if(this.state.getusersubjects){\r\n    let Takenitems = JSON.parse(this.state.TakenCourses);\r\n    let Currentitems = JSON.parse(this.state.CurrentCourses);\r\n    let TakenTable = null;\r\n    let CurrentTable = null;\r\n    if(Takenitems.length === 0){\r\n        TakenTable = <div><span className=\"ititle\">There are no other taken subjetcs yet.</span></div>\r\n    }\r\n    else{\r\n        TakenTable = <div className=\"targy\">           \r\n        <div className=\"atables\">\r\n          <table className=\"acontent-table\">\r\n            <thead>\r\n                <tr>\r\n                <th>Subject</th>\r\n                <th>Teacher</th>             \r\n                <th>Status</th>      \r\n                </tr>   \r\n            </thead>\r\n  \r\n        <tbody>\r\n        {Takenitems.map(item => (\r\n            <tr key={item._id}>\r\n              <td data-label=\"Subject:\">{item.targy}</td>\r\n              <td data-label=\"Teacher:\">{item.oktato}</td>                    \r\n              <td data-label=\"Status:\">{item.tstatus}</td>             \r\n            </tr>\r\n          ))} \r\n        </tbody>\r\n        </table>  \r\n        </div>  \r\n    </div>\r\n    }\r\n\r\n    if(Currentitems.length === 0){\r\n        CurrentTable = <div><span className=\"ititle\">There are no current subjects yet.</span></div>\r\n    }\r\n    else{\r\n        CurrentTable = <div className=\"targy\">           \r\n        <div className=\"atables\">\r\n          <table className=\"acontent-table\">\r\n            <thead>\r\n                <tr>\r\n                <th>Subject</th>\r\n                <th>Teacher</th>             \r\n                <th>Status</th>      \r\n                </tr>   \r\n            </thead>\r\n  \r\n        <tbody>\r\n        {Currentitems.map(item => (\r\n            <tr key={item._id}>\r\n              <td data-label=\"Subject:\">{item.targy}</td>\r\n              <td data-label=\"Teacher:\">{item.oktato}</td>                    \r\n              <td data-label=\"Status:\">{item.tstatus}</td>             \r\n            </tr>\r\n          ))} \r\n        </tbody>\r\n        </table>  \r\n        </div>  \r\n    </div>\r\n    }\r\n\r\n    content = \r\n    <form onSubmit={this.SubmitHandler}>\r\n        <br />\r\n            <span className=\"inf-title\">\r\n             {this.state.firstname} {this.state.lastname}'s subjects\r\n            </span>\r\n        <br />\r\n        <span className=\"ititle\"> Current courses  </span>\r\n        <br />\r\n                {CurrentTable}\r\n        <br />\r\n        <span className=\"ititle\"> Taken courses  </span>\r\n        <br />\r\n                {TakenTable}\r\n        <br />\r\n\r\n    </form>;\r\n    }\r\n    else{\r\n    content= <form onSubmit={this.SubmitHandler}>\r\n                  <br />\r\n            <span className=\"inf-title\">\r\n                 User Subjects Administration \r\n\t\t\t</span>\r\n            <br />\r\n    <div className=\"targy\">  \r\n        <ul className=\"list-containers\">\r\n             <li className=\"paddingb\">\r\n                Show pending subjects:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={ this.handleClickForPendingSubjects }/>\r\n             </li> \r\n             <li className=\"paddingb\">\r\n                Show not administered:\r\n             </li>\r\n             <li className=\"paddingl\">\r\n             <input \r\n                type=\"checkbox\" \r\n                className=\"CheckBoxAdmin\"\r\n                onChange={ this.handleClickForNotAdministrated }/>\r\n             </li> \r\n        </ul>\r\n      <div className=\"atables\">\r\n            <table className=\"acontent-table\">\r\n                <thead>\r\n                 <tr>\r\n                 <th>Email</th>\r\n                 <th>First Name</th>             \r\n                 <th>Last Name</th>\r\n                 <th>Neptun code</th>  \r\n                 <th>Supervisor</th>\r\n                 <th>Subjects</th>\r\n                 </tr>   \r\n                </thead>\r\n        \r\n                \r\n                <tbody>\r\n                {this.props.items.map(item => (\r\n                  <tr key={item._id}>\r\n                    <td data-label=\"Email:\">{item.email}</td>\r\n                    <td data-label=\"First name:\">{item.firstname}</td>\r\n                    <td data-label=\"Last name:\">{item.lastname}</td>  \r\n                    <td data-label=\"Neptun code:\">{item.neptuncode}</td>  \r\n                    <td data-label=\"Supervisor:\">{item.supervisor}</td>  \r\n                    <td data-label=\"Subjects:\">\r\n                        <input \r\n                                type=\"checkbox\" \r\n                                className=\"CheckBoxAdmin\"\r\n                                checked={ this.state.getusersubjects} \r\n                                data-mssg={item._id+'|'+item.email+'|'+item.firstname+'|'+item.lastname+'|'+item.phonenumber+\r\n                                '|'+ item.neptuncode+'|'+item.supervisor+'|'+item.doctoralprogram+'|'+item.programdirector+\r\n                                '|'+item.coursetype+'|'+item.semester}\r\n                                onChange={ this.handleClick }/>\r\n                    </td>\r\n                  </tr>\r\n                ))} \r\n                </tbody>\r\n            </table>    \r\n        </div>\r\n    </div> \r\n        </form>;\r\n        }}}}}}}}}\r\n        return ( \r\n        <div>          \r\n            {content} \r\n            <br /> \r\n        </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostUserAdministration;","import DeIkLogo from '../../Style/DeIKLogo.png';\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './AdminNav';\r\nimport '../../Style/adminpage.css';\r\nimport UsersAdministrationForm from './PostFormsJS/PostUserSubjectsAdministartionForm'\r\n\r\n\r\nfunction  UserSubjects() {\r\n    useEffect(()=>{\r\n        fetchDoctoralProgram();\r\n        fetchTeacherNames();\r\n        fetchItems();\r\n      },[]);\r\n      \r\n      const [items,setItems] = useState([]);\r\n      const [DoctoralPrograms,setDoctoralPrograms] = useState([]);\r\n      const [Teachernames,setTeacherNames] = useState([]);\r\n    \r\n    const fetchItems = async () =>{\r\n    const data = await fetch(\r\n      'http://phd.inf.unideb.hu/api/getusers'\r\n          \r\n        );\r\n        const items = await data.json();    \r\n        setItems(items);\r\n    };\r\n\r\n    const fetchDoctoralProgram = async () =>{\r\n      const data = await fetch(\r\n        'http://phd.inf.unideb.hu/api/getdoctoralprograms'\r\n      );\r\n      const items = await data.json();    \r\n      setDoctoralPrograms(items);\r\n    };\r\n  \r\n    const fetchTeacherNames = async () =>{\r\n      const teachername = await fetch(\r\n          'http://phd.inf.unideb.hu/api/NameAndEmail' \r\n        );\r\n        const Teachernames = await teachername.json();    \r\n        setTeacherNames(Teachernames);  \r\n    };\r\n    \r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n    <div className=\"containera\">\r\n        <div className=\"wrap-logina\">\r\n            <div className=\"img-wrapa\">\r\n                <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t</div>\r\n            <div className=\"titlea\"> \r\n                <span className=\"login-form-title\">\r\n                  Doctoral School <br /> of Informatics\r\n\t\t\t          </span>\r\n            </div>\r\n                <Nav/> \r\n                <UsersAdministrationForm items={items} teachernames={Teachernames} DoctoralPrograms={DoctoralPrograms}/>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default UserSubjects;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\nimport AdminData from '../AdminDataGetSet';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass PostAdminAdministration extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            AdminID:'',\r\n            FirstName:'',\r\n            LastName:'',\r\n            Email:'',\r\n            DeleteAdminID:'',\r\n            DeleteAdminFirstName:'',\r\n            DeleteAdminLastName:'',\r\n            DeleteAdminEmail:'',\r\n            GenerateAdminID:'',\r\n            GenerateAdminFirstName:'',\r\n            GenerateAdminLastName:'',\r\n            GenerateAdminEmail:'',\r\n            delete:false,\r\n            edit:false,\r\n            generate:false,\r\n        }\r\n        this.handleChange = this.handleClick.bind(this);\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/getteachers',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForEdit= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/editadmins',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n        const datas = event.target.dataset.mssg.split('|');  \r\n        this.setState({      \r\n            edit: !this.state.edit,\r\n            Email: datas[3],\r\n            LastName: datas[2],\r\n            FirstName: datas[1],\r\n            AdminID: datas[0]\r\n        })\r\n    }\r\n\r\n    SubmitHandlerForDelete= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/deleteadmins',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForGenerate= e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/gennewpassforadmin',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n\r\n    SubmitHandlerForReloadPage= e=>{ \r\n        e.preventDefault()\r\n        refreshPage() \r\n    }\r\n\r\n    handleClickforDelete = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            DeleteAdminEmail: datas[3],\r\n            DeleteAdminLastName: datas[2],\r\n            DeleteAdminFirstName: datas[1],\r\n            DeleteAdminID: datas[0],\r\n            delete: !this.state.delete,\r\n        })   \r\n    }\r\n\r\n    handleClickforGenNewPassForAdmin = event => {\r\n        const datas = event.target.dataset.mssg.split('|');\r\n        this.setState({\r\n            GenerateAdminEmail: datas[3],\r\n            GenerateAdminLastName: datas[2],\r\n            GenerateAdminFirstName: datas[1],\r\n            GenerateAdminID: datas[0],\r\n            generate: !this.state.generate,\r\n        })   \r\n    }\r\n    \r\n    render(){\r\n        let content = null;\r\n        if(this.state.DeleteAdminID === AdminData.GetAdminID() || this.state.GenerateAdminID === AdminData.GetAdminID()){\r\n            content = <form onSubmit={this.SubmitHandlerForReloadPage}>\r\n            <br />\r\n            <span className=\"inf-title\">You cannot delete or generate a new password for your own user!</span>\r\n            <br />\r\n            <span className=\"ititle\">(If you would like to change your password, you can do it on your profile.)</span>\r\n    <ul className=\"list-input\">\r\n        <li>\r\n        <div className=\"container-login-form-btna\">\r\n            <button type =\"submit\" className=\"login-form-btna\">\r\n                Leave\r\n            </button>\r\n        </div>\r\n        </li>\r\n    </ul>\r\n       </form>\r\n        }else{\r\n        if(this.state.generate){\r\n            content =  \r\n            <form onSubmit={this.SubmitHandlerForGenerate}>\r\n                 <span className=\"inf-title\">Would you like to generate <br/> a new password for this admin?</span>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n\r\n             <span className=\"ititle\">Email: {this.state.GenerateAdminEmail}</span>\r\n             </li>\r\n         </ul>\r\n         <br />\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <span className=\"ititle\">Admin's name: {this.state.GenerateAdminFirstName} {this.state.GenerateAdminLastName}</span>\r\n             </li>\r\n         </ul>\r\n \r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Generate\r\n                 </button>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n            </form>\r\n        }else\r\n        {\r\n        if(this.state.delete){\r\n            content =  \r\n            <form onSubmit={this.SubmitHandlerForDelete}>\r\n                 <span className=\"inf-title\">Do you want to delete this admin?</span>\r\n            <br />\r\n            <ul className=\"list-input\">\r\n             <li>\r\n\r\n             <span className=\"ititle\">Email: {this.state.DeleteAdminEmail}</span>\r\n             </li>\r\n         </ul>\r\n         <br />\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <span className=\"ititle\">Admin's name: {this.state.DeleteAdminFirstName} {this.state.DeleteAdminLastName}</span>\r\n             </li>\r\n         </ul>\r\n \r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Delete\r\n                 </button>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n            </form>\r\n        }\r\n        else{\r\n            if (this.state.edit) {\r\n             content =  \r\n         <form onSubmit={this.SubmitHandlerForEdit}>\r\n             <br/>\r\n             <span className=\"inf-title\">\r\n                Edit Admins\r\n\t\t</span>\r\n        <br />\r\n        <ul className=\"list-input\">\r\n             <li>\r\n             <div>\r\n                 <span className=\"txt1\">\r\n                     First Name:\r\n                 </span>\r\n             </div>\r\n             \r\n             <div className=\"wrap-inputa\">\r\n                 <input className=\"inputa\" type=\"text\" name=\"FirstName\" value={this.state.FirstName} onChange={e => {\r\n                     this.setState({ FirstName: e.target.value})}} required/>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div>\r\n                 <span className=\"txt1\">\r\n                     Last Name:\r\n                 </span>\r\n             </div>\r\n             \r\n             <div className=\"wrap-inputa\">\r\n                 <input className=\"inputa\" type=\"text\" name=\"LastName\" value={this.state.LastName} onChange={e => {\r\n                     this.setState({ LastName: e.target.value})}} required/>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n\r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div>\r\n                 <span className=\"txt1\">\r\n                     Admin's email:\r\n                 </span>\r\n             </div>\r\n             \r\n             <div className=\"wrap-inputa\">\r\n                 <input className=\"inputa\" type=\"email\" name=\"Email\" value={this.state.Email} onChange={e => {\r\n                     this.setState({Email: e.target.value})}} required/>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n \r\n         <ul className=\"list-input\">\r\n             <li>\r\n             <div className=\"container-login-form-btna\">\r\n                 <button type =\"submit\" className=\"login-form-btna\">\r\n                     Save\r\n                 </button>\r\n             </div>\r\n             </li>\r\n         </ul>\r\n         </form>;\r\n        }\r\n        else{\r\n         content= <form onSubmit={this.SubmitHandler}>\r\n                 <br />\r\n            <span className=\"inf-title\">\r\n                 Admin Administration \r\n\t\t\t</span>\r\n            <br />\r\n    <div className=\"targy\">  \r\n      <div className=\"atables\">\r\n            <table className=\"acontent-table\">\r\n                <thead>\r\n                 <tr>\r\n                 <th>Email</th>\r\n                 <th>First Name</th>             \r\n                 <th>Last Name</th> \r\n                 <th>Edit</th> \r\n                 <th>Delete</th>\r\n                 <th>Gen.</th>  \r\n                 </tr>   \r\n                </thead>\r\n        \r\n                \r\n                <tbody>\r\n                {this.props.items.map(item => (\r\n                  <tr key={item._id}>\r\n                    <td data-label=\"Email:\">{item.email}</td>\r\n                    <td data-label=\"First name:\">{item.firstname}</td>\r\n                    <td data-label=\"Last name:\">{item.lastname}</td>          \r\n                    <td data-label=\"Edit:\">\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            className=\"CheckBoxAdmin\"\r\n                            checked={ this.state.edit} \r\n                            data-mssg={item._id+\"|\"+item.firstname+\"|\"+item.lastname+\"|\"+item.email}\r\n                            onChange={ this.handleClick }/>\r\n                    </td>   \r\n                    <td data-label=\"Del.:\">\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            className=\"CheckBoxAdmin\"\r\n                            checked={ this.state.delete} \r\n                            data-mssg={item._id+\"|\"+item.firstname+\"|\"+item.lastname+\"|\"+item.email}\r\n                            onChange={ this.handleClickforDelete } />  \r\n                    </td>\r\n                    <td data-label=\"Gen.:\">\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            className=\"CheckBoxAdmin\"\r\n                            checked={ this.state.delete} \r\n                            data-mssg={item._id+\"|\"+item.firstname+\"|\"+item.lastname+\"|\"+item.email}\r\n                            onChange={ this.handleClickforGenNewPassForAdmin } />  \r\n                    </td>                \r\n                  </tr>\r\n                ))} \r\n                </tbody>\r\n            </table>    \r\n        </div>\r\n    </div>  \r\n        </form>;\r\n        }\r\n    }}}\r\n        return ( \r\n        <div>          \r\n            {content}\r\n            <br />  \r\n        </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostAdminAdministration;","import DeIkLogo from '../../Style/DeIKLogo.png';\r\nimport React, {useState,useEffect} from 'react';\r\nimport '../../Style/App.css';\r\nimport Nav from './AdminNav';\r\nimport AdminAdministrationForm from './PostFormsJS/PostAdminAdministrationForm';\r\nimport '../../Style/adminpage.css';\r\n\r\n\r\nfunction  Users() {\r\n    useEffect(()=>{\r\n        fetchItems();\r\n      },[]);\r\n      \r\n      \r\n    \r\n      const [items,setItems] = useState([]);\r\n    \r\n      const fetchItems = async () =>{\r\n        const data = await fetch(\r\n          'http://phd.inf.unideb.hu/api/getadmins'\r\n          \r\n        );\r\n        const items = await data.json();    \r\n        setItems(items);\r\n      } ;\r\n    \r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n    <div className=\"containera\">\r\n        <div className=\"wrap-logina\">\r\n            <div className=\"img-wrapa\">\r\n                <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t</div>\r\n            <div className=\"titlea\"> \r\n                <span className=\"login-form-title\">\r\n                Doctoral School <br /> of Informatics\r\n\t\t\t    </span>\r\n            </div>\r\n                <Nav/>\r\n                <AdminAdministrationForm items={items}/>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Users;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Style/adminpage.css';\r\nimport AdminData from '../AdminDataGetSet';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false)\r\n}\r\n\r\nclass AdminChange extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            AdminId: AdminData.GetAdminID(),\r\n            OldPass:'',\r\n            NewPass:'',\r\n            ConfirmNewPass:'',\r\n        }\r\n    }\r\n    \r\n    changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]:e.target.value})\r\n    }\r\n    SubmitHandler = e=>{ \r\n        e.preventDefault()\r\n        axios.post('http://phd.inf.unideb.hu/api/changeadminpass',this.state)\r\n        .then(response => {\r\n            alert(response.data);\r\n            refreshPage() \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            refreshPage() \r\n        })\r\n    }\r\n    render(){\r\n        const{OldPass,NewPass,ConfirmNewPass}=this.state;\r\n        \r\n        return (            \r\n        <form onSubmit={this.SubmitHandler}>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                   Old password:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"OldPass\" value={OldPass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    New password:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"NewPass\" value={NewPass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div>\r\n                <span className=\"txt1\">\r\n                    Confirm New Password:\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"wrap-inputa\">\r\n                <input className=\"inputa\" type=\"password\" name=\"ConfirmNewPass\" value={ConfirmNewPass} onChange={this.changeHandler} required/>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul className=\"list-input\">\r\n            <li>\r\n            <div className=\"container-login-form-btna\">\r\n                <button type =\"submit\" className=\"login-form-btna\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n            </li>\r\n        </ul>\r\n\r\n            \r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminChange;","import React from 'react';\r\nimport DeIkLogo from '../../Style/DeIKLogo.png' \r\nimport '../../Style/adminpage.css';\r\nimport Nav from './AdminNav';\r\nimport AdminData from './AdminDataGetSet';\r\nimport PostAdminChangePassUserForm from './PostFormsJS/PostAdminChangePassUserForm';\r\n\r\n\r\nfunction AdminProfile() {\r\n  return (\r\n<div>\r\n<style>{'body { background-color: #f6f6f6; }'}</style>\r\n<div className=\"limitera\">\r\n<div className=\"containera\">\r\n    <div className=\"wrap-logina\">\r\n        <div className=\"img-wrapa\">\r\n            <img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n        </div>\r\n        <div className=\"titlea\"> \r\n            <span className=\"login-form-title\">\r\n            Doctoral School <br /> of Informatics\r\n\t\t\t</span>\r\n        </div>\r\n       <Nav/>\r\n           <br />\r\n            <span className=\"inf-title\">\r\n                 Admin Profile \r\n\t\t\t</span>\r\n            <br /><br /><br />\r\n            <span className=\"title2\">\r\n                  Personal Data\r\n\t\t\t</span>\r\n            <br />\r\n            <span className=\"ititle\">Email: {AdminData.GetAdminEmail()}</span>\r\n            <br />\r\n            <span className=\"ititle\">First Name: {AdminData.GetAdminFirstname()}</span>\r\n            <br />\r\n            <span className=\"ititle\">Last Name: {AdminData.GetAdminLastname()}</span>\r\n            <br />\r\n            <span className=\"ititle\">Username: {AdminData.GetAdminUserName()}</span>\r\n            <br /><br /><br />\r\n            <span className=\"title2\">\r\n                 Change Password\r\n\t\t\t</span>\r\n            <PostAdminChangePassUserForm/>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default AdminProfile;","import React from 'react';\r\nimport '../Style/style.css';\r\nimport DeIkLogo from '../Style/DeIKLogo.png';\r\n\r\nfunction ForgetPass() {\r\n  return (\r\n    <div className=\"centered\">\r\n    <style>{'body { background-color: #EBECF0; }'}</style>\r\n    <div className=\"limiter\">\r\n\t\t<div className=\"container-login\">\r\n\t\t\t<div className=\"wrap-login\">\r\n\t\t\t\t\t<span className=\"login-form-title\">\r\n\t\t\t\t\t\tDoctoral School <br />  of Informatics\r\n\t\t\t\t\t</span>\r\n                    <div className=\"ititle\">\r\n\t\t\t\t\t\t\t<img src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t\t\t</div>\r\n                    <br/>\r\n                 <ul className=\"list-input\">\r\n                    <li>\r\n                    <div>\r\n                          <span className=\"ititle\"> Please contact the Administrator!</span>\r\n                     </div>\r\n                    </li>\r\n                 </ul>\r\n                 <br/>\r\n                    <span className=\"ititle\"> Email:  admin@inf.unideb.hu</span>\r\n                    <span className=\"ititle\"> Phone:  +361111111</span>\r\n                    <br/>\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default ForgetPass;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from './AdminAuth';\r\nimport AdminData from './AdminDataGetSet';\r\nimport axios from 'axios';\r\n\r\nfunction refreshPage() {\r\n  window.location.reload(false)\r\n}\r\n\r\nasync function Check(){\r\n   const token = ({token:auth.isAuthenticated()});\r\n   await axios.post('http://phd.inf.unideb.hu/api/adminlogin/allow/'+ AdminData.GetAdminID(),token).then(() =>{\r\n  }).catch(error => {\r\n    sessionStorage.clear();\r\n    refreshPage();\r\n    })}\r\n\r\nexport const SecuredRouteAsAdmin = ({\r\n    component: Component,\r\n    ...rest\r\n  }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n           if (auth.isAuthenticated() != null && AdminData.GetAdminID() != null) {\r\n              Check();\r\n              return <Component {...props} />;\r\n            }  else {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/adminlogin\",\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from './UserAuth';\r\nimport axios from 'axios';\r\nimport UserData from './UserDataGetSet';\r\n\r\nfunction refreshPage() {\r\n  window.location.reload(false)\r\n}\r\n\r\nasync function Check(){\r\n   const token = ({token:auth.isAuthenticatedUser()});\r\n   console.log(UserData.GetUserID());\r\n   await axios.post('http://phd.inf.unideb.hu/api/userlogin/allow/'+ UserData.GetUserID(),token).then(() =>{\r\n  }).catch(error => {\r\n    sessionStorage.clear();\r\n    refreshPage();\r\n    })}\r\n\r\nexport const SecuredRouteAsUser = ({\r\n    component: Component,\r\n    ...rest\r\n  }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n            if (auth.isAuthenticatedUser() != null && UserData.GetUserID() != null) {\r\n              Check();\r\n              return <Component {...props} />;\r\n            } else {\r\n              return (\r\n                <Redirect\r\n                  to={{\r\n                    pathname: \"/userlogin\",\r\n                  }}\r\n                />\r\n              );\r\n            }  \r\n        }}\r\n      />\r\n    );\r\n  };","\r\nimport '../../Style/Sbchange.css';\r\nimport axios from \"axios\";\r\nimport React, { Component } from 'react';\r\n\r\nconst Params = new URLSearchParams(window.location.search);\r\n\r\nclass Subjectupdate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tstatus: '',\r\n            subject: '',\r\n            stdName: '',\r\n            state: -1,\r\n            tname: '',\r\n            valid: false,\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        axios.get('http://phd.inf.unideb.hu/api/posts/' + Params.get('uid') + '/' + Params.get('pid'))\r\n            .then(res => {\r\n                if (res.data === \"error\" || res.data.length === 0) {\r\n                    this.setState({\r\n                        state: -2\r\n                    })\r\n                    console.log(\"Cannot find post\")\r\n                }\r\n                else {\r\n                    const data = res.data;\r\n                    this.setState({\r\n                        state: data[0].state,\r\n                        tname: data[0].oktato,\r\n                        subject: data[0].targy\r\n                    })\r\n\r\n                    axios.get('http://phd.inf.unideb.hu/api/getusers/' + Params.get('uid'))\r\n                        .then(res => {\r\n                            if (res.data === \"error\" || res.data.length === 0) {\r\n                                this.setState({\r\n                                    state: -2\r\n                                })\r\n                                console.log(\"Cannot find post\")\r\n                            }\r\n                            this.setState({\r\n                                stdName: res.data\r\n                            })\r\n\r\n\r\n                            axios.get('http://phd.inf.unideb.hu/api/nameandemail/' + Params.get('aid'))\r\n                            .then(res => {\r\n                                const data = res.data;\r\n                                const Name = data[0].TeacherName\r\n                                if (Name === this.state.tname) {\r\n                                    this.setState({\r\n                                        valid: true\r\n                                    })\r\n                                }\r\n                            })\r\n\r\n\r\n\r\n                        })\r\n\r\n\r\n                   \r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    SubmitHandler = e => {\r\n        axios.patch('http://phd.inf.unideb.hu/api/subjectupdate/teacher/' + Params.get('uid') + '/' + Params.get('pid') + '/' + Params.get('key'), this.state)\r\n            .then(response => {\r\n                if (response.data === \"success\") {\r\n                    this.setState({\r\n                        state: 1\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        e.preventDefault()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.valid && this.state.state === 0) {\r\n            return (\r\n\r\n                <div className=\"centered\">\r\n                    <style>{'body { background-color: #EBECF0; }'}</style>\r\n                    <div className=\"limiter\">\r\n                        <div className=\"container-login\">\r\n                            <div className=\"wrap-login\">\r\n                                <span className=\"login-form-title\">\r\n                                    Oktató: {this.state.tname}<br></br>\r\n                                    Hallgató: {this.state.stdName}<br></br>\r\n                                    Tárgy: {this.state.subject}<br></br><br></br>\r\n                                    Elfogadja a tárgyfelvételt?\r\n                                 </span>\r\n\r\n                                <form onSubmit={this.SubmitHandler} className=\"sbtform\">\r\n                                    <button className=\"btnno\" type=\"submit\"\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                tstatus: \"Declined\",\r\n\r\n                                            })\r\n                                        }} >\r\n                                        Nem</button>\r\n                                    <button className=\"btnyes\" type=\"submit\" onClick={() => {\r\n                                        this.setState({\r\n                                            tstatus: \"Accepted\",\r\n\r\n                                        })\r\n                                    }}>Igen</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else if (this.state.valid && (this.state.state === 1 || this.state.state === 2)) {\r\n            return (\r\n                <div className=\"centered\">\r\n                    <style>{'body { background-color: #EBECF0; }'}</style>\r\n                    <div className=\"limiter\">\r\n                        <div className=\"container-login\">\r\n                            <div className=\"wrap-login\">\r\n                                <span className=\"login-form-title\">\r\n                                    Nyilatkozat tétel megtörtént.\r\n                        </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.state === -2) {\r\n            return (\r\n                <div className=\"centered\">\r\n                    <style>{'body { background-color: #EBECF0; }'}</style>\r\n                    <div className=\"limiter\">\r\n                        <div className=\"container-login\">\r\n                            <div className=\"wrap-login\">\r\n                                <span className=\"login-form-title\">\r\n                                    Cannot find post.\r\n                        </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"centered\">\r\n                    <style>{'body { background-color: #EBECF0; }'}</style>\r\n                    <div className=\"limiter\">\r\n                        <div className=\"container-login\">\r\n                            <div className=\"wrap-login\">\r\n                                <span className=\"login-form-title\">\r\n                                    Loading\r\n                        </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Subjectupdate;\r\n","import React from 'react';\r\nimport DeIkLogo from '../Style/DeIKLogo.png' \r\nimport '../Style/style.css';\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div className=\"centered\">\r\n    <style>{'body { background-color: #EBECF0; }'}</style>\r\n    <div className=\"limiter\">\r\n\t\t<div className=\"container-login\">\r\n\t\t\t<div className=\"wrap-login\">\r\n\t\t\t\t\t<span className=\"login-form-title\">\r\n\t\t\t\t\t\tDoctoral School <br />  of Informatics\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"img-wrap\">\r\n\t\t\t\t\t\t\t<img className=\"img\" src={DeIkLogo} alt={\"DeIkLogo\"}/> \r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"error-messages\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className=\"wrap-input\">\r\n                        <a href=\"/userlogin\">\r\n\t\t\t\t\t\t\tStudent\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n                    <br />\r\n                    <div className=\"wrap-input\">\r\n\t\t\t\t\t<div>\r\n                        <a href=\"/adminlogin\">\r\n\t\t\t\t\t\t\tAdmin\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport '../Style/App.css';\r\nimport Felvetel from './User/Felvetel';\r\nimport Home from './User/Home';\r\nimport Abszolvalt from './User/Abszolvalt';\r\nimport AdminLogin from './Admin/login_admin';\r\nimport UserLogin from './User/login_user';\r\nimport AdminPage from './Admin/AdminPage';\r\nimport DoctoralPrograms from './Admin/DoctoralPrograms';\r\nimport Subjects from './Admin/Subjects';\r\nimport TakenCourses from './User/TakenCourses';\r\nimport AdminPageRegUser from './Admin/AdminPageRegUser';\r\nimport AdminPageRegAdmin from './Admin/AdminPageRegAdmin';\r\nimport Teachers from './Admin/Teacher';\r\nimport UserSubjects from './Admin/UserSubjectsAdministration';\r\nimport Admins from './Admin/Admins';\r\nimport AdminProfile from './Admin/AdminProfile';\r\nimport ForgetPass from './ForgetPass';\r\nimport {BrowserRouter as Router , Switch, Route} from 'react-router-dom';\r\nimport { SecuredRouteAsAdmin } from \"./Admin/Adminprotected.route\";\r\nimport { SecuredRouteAsUser } from \"./User/Userprotected.route\";\r\nimport SubjectUpdate from './Admin/Subjectupdate';\r\nimport MainPage from './MainPage';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n          <Route exact path=\"/\" component={MainPage}/>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/ForgotPass\" component={ForgetPass}/>\r\n          <Route path=\"/UserLogin\" component={UserLogin} />\r\n          <Route path=\"/AdminLogin\" component={AdminLogin} />\r\n          <Route path=\"/subjectupdate\" component={SubjectUpdate} /> \r\n          <SecuredRouteAsAdmin path=\"/AdminPageRegUser\" component={AdminPageRegUser} />\r\n          <SecuredRouteAsAdmin path=\"/UserSubjectsAdmin\" component={UserSubjects} />\r\n          <SecuredRouteAsAdmin path=\"/AdminPageRegAdmin\" component={AdminPageRegAdmin} />\r\n          <SecuredRouteAsAdmin path=\"/DoctoralPrograms\" component={DoctoralPrograms} />\r\n          <SecuredRouteAsAdmin path=\"/Subjects\" component={Subjects} />\r\n          <SecuredRouteAsAdmin path=\"/Teachers\" component={Teachers} />\r\n          <SecuredRouteAsAdmin path=\"/Users\" component={AdminPage} />\r\n          <SecuredRouteAsAdmin path=\"/Admins\" component={Admins} />\r\n          <SecuredRouteAsAdmin path=\"/AdminProfile\" component={AdminProfile} />\r\n          <SecuredRouteAsUser path=\"/Home\" component={Home} />           \r\n          <SecuredRouteAsUser path=\"/TakenCourses\" component={TakenCourses}/>\r\n          <SecuredRouteAsUser path=\"/SubjectReg\" component={Felvetel} /> \r\n          <SecuredRouteAsUser path=\"/Graduation\" component={Abszolvalt} /> \r\n        </Switch>     \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Style/index.css';\r\nimport App from './JavaScripts/App';\r\nimport * as serviceWorker from './JavaScripts/serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}